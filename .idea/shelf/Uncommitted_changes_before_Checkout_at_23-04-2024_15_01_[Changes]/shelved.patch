Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"73fbc03c-0472-4458-ace0-a4376c684e6f\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInicio.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInicio.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/VentanaEmergenteDecision.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/VentanaEmergenteDecision.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDecision.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDecision.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodyActiveAccount\">\r\n    <option name=\"activeAccountId\" value=\"VXNlcjozODM1ODI=\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"master\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"Edgar\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"testing\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n    &quot;associatedIndex&quot;: 4\r\n    }</component>\r\n  <component name=\"ProjectId\" id=\"2dirlefD5DxljA0N9gwNVNUnaIU\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.CodyConvertUrlToCodebaseName\": \"true\",\r\n    \"RunOnceActivity.CodyHistoryLlmMigration\": \"true\",\r\n    \"RunOnceActivity.CodyProjectSettingsMigration\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"UI_DESIGNER_EDITOR_MODE.PaletteManager.SHOW\": \"true\",\r\n    \"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH\": \"512\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"testing\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/catah/OneDrive - Universidad de Talca/Escritorio/aaaaaaaaaaa/Proyecto-Diagrama-de-Flujo-e21562460f1d072dae58cb401a4ff4a41fdd1229\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"SDKs\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"reference.settings.ide.settings.file-colors\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"LogicaFiguras\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"GraficadorInteractivo\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d011937a-d03c-4e27-a502-a575753ae30f\" name=\"Changes\" comment=\"\" />\r\n      <created>1710501892453</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710501892453</updated>\r\n      <workItem from=\"1710501893482\" duration=\"19000\" />\r\n      <workItem from=\"1710501928960\" duration=\"597000\" />\r\n      <workItem from=\"1710502572541\" duration=\"8000\" />\r\n      <workItem from=\"1710502599781\" duration=\"108000\" />\r\n      <workItem from=\"1710502736836\" duration=\"725000\" />\r\n      <workItem from=\"1710503498694\" duration=\"18000\" />\r\n      <workItem from=\"1710503524960\" duration=\"42000\" />\r\n      <workItem from=\"1710503594128\" duration=\"922000\" />\r\n      <workItem from=\"1710509865136\" duration=\"522000\" />\r\n      <workItem from=\"1710550122912\" duration=\"2272000\" />\r\n      <workItem from=\"1710552608494\" duration=\"225000\" />\r\n      <workItem from=\"1710554332915\" duration=\"973000\" />\r\n      <workItem from=\"1710584677830\" duration=\"77000\" />\r\n      <workItem from=\"1710585350962\" duration=\"1285000\" />\r\n      <workItem from=\"1710586782759\" duration=\"267000\" />\r\n      <workItem from=\"1710587073308\" duration=\"165000\" />\r\n      <workItem from=\"1710587255476\" duration=\"87000\" />\r\n      <workItem from=\"1710587474880\" duration=\"1187000\" />\r\n      <workItem from=\"1710589963917\" duration=\"675000\" />\r\n      <workItem from=\"1710621523871\" duration=\"146000\" />\r\n      <workItem from=\"1710699958883\" duration=\"12982000\" />\r\n      <workItem from=\"1710720795353\" duration=\"53000\" />\r\n      <workItem from=\"1710787900013\" duration=\"84000\" />\r\n      <workItem from=\"1710788001213\" duration=\"110000\" />\r\n      <workItem from=\"1710788179290\" duration=\"1559000\" />\r\n      <workItem from=\"1710807091208\" duration=\"71000\" />\r\n      <workItem from=\"1711036718560\" duration=\"689000\" />\r\n      <workItem from=\"1711056144708\" duration=\"2118000\" />\r\n      <workItem from=\"1711069031272\" duration=\"202000\" />\r\n      <workItem from=\"1711204161415\" duration=\"3993000\" />\r\n      <workItem from=\"1711941059588\" duration=\"727000\" />\r\n      <workItem from=\"1712364788791\" duration=\"3062000\" />\r\n      <workItem from=\"1712415021566\" duration=\"789000\" />\r\n      <workItem from=\"1712431091306\" duration=\"5510000\" />\r\n      <workItem from=\"1712500818533\" duration=\"28960000\" />\r\n      <workItem from=\"1712579678706\" duration=\"1043000\" />\r\n      <workItem from=\"1712581071997\" duration=\"372000\" />\r\n      <workItem from=\"1712597557775\" duration=\"1778000\" />\r\n      <workItem from=\"1712796861319\" duration=\"12579000\" />\r\n      <workItem from=\"1713219468370\" duration=\"536000\" />\r\n      <workItem from=\"1713584580104\" duration=\"11000\" />\r\n      <workItem from=\"1713630594804\" duration=\"9000\" />\r\n      <workItem from=\"1713630790695\" duration=\"10247000\" />\r\n      <workItem from=\"1713811912060\" duration=\"470000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Intercambio de figuras parcial\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580312170</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580312170</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"Edgar\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Intercambio de figuras parcial\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Intercambio de figuras parcial\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java</url>\r\n          <line>45</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/VentanaEmergenteDecision.java</url>\r\n          <line>126</line>\r\n          <properties class=\"Dibujos.PanelesMovibles.Decision.VentanaEmergenteDecision\" method=\"ajustarAlto\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,10 +5,14 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="73fbc03c-0472-4458-ace0-a4376c684e6f" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/cody_history.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/cody_history.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInicio.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInicio.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/VentanaEmergenteDecision.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/VentanaEmergenteDecision.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDecision.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDecision.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDocumento.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDocumento.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoEntrada.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoEntrada.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoProceso.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoProceso.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoFin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoFin.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoInicio.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoInicio.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -68,33 +72,33 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.Main.executor": "Run",
-    "RunOnceActivity.CodyConvertUrlToCodebaseName": "true",
-    "RunOnceActivity.CodyHistoryLlmMigration": "true",
-    "RunOnceActivity.CodyProjectSettingsMigration": "true",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "UI_DESIGNER_EDITOR_MODE.PaletteManager.SHOW": "true",
-    "UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH": "512",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "testing",
-    "ignore.virus.scanning.warn.message": "true",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/catah/OneDrive - Universidad de Talca/Escritorio/aaaaaaaaaaa/Proyecto-Diagrama-de-Flujo-e21562460f1d072dae58cb401a4ff4a41fdd1229",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "SDKs",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "reference.settings.ide.settings.file-colors",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.CodyConvertUrlToCodebaseName&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.CodyHistoryLlmMigration&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.CodyProjectSettingsMigration&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;UI_DESIGNER_EDITOR_MODE.PaletteManager.SHOW&quot;: &quot;true&quot;,
+    &quot;UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH&quot;: &quot;512&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;testing&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/catah/OneDrive - Universidad de Talca/Escritorio/aaaaaaaaaaa/Proyecto-Diagrama-de-Flujo-e21562460f1d072dae58cb401a4ff4a41fdd1229&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.file-colors&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
       <recent name="LogicaFiguras" />
@@ -126,7 +130,7 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="d011937a-d03c-4e27-a502-a575753ae30f" name="Changes" comment="" />
+      <changelist id="73fbc03c-0472-4458-ace0-a4376c684e6f" name="Changes" comment="" />
       <created>1710501892453</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
@@ -175,6 +179,10 @@
       <workItem from="1713630594804" duration="9000" />
       <workItem from="1713630790695" duration="10247000" />
       <workItem from="1713811912060" duration="470000" />
+      <workItem from="1713896963308" duration="310000" />
+      <workItem from="1713897291814" duration="795000" />
+      <workItem from="1713898160586" duration="200000" />
+      <workItem from="1713898428264" duration="323000" />
     </task>
     <task id="LOCAL-00001" summary="Intercambio de figuras parcial">
       <option name="closed" value="true" />
Index: .idea/cody_history.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChatHistory\">\r\n    <chats>\r\n      <list>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"761a579d-bb39-4895-8ca6-9e2c6b68d90b\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"c89ad32b-ca56-4b6c-838d-af254e02feb6\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n          <messages>\r\n            <list>\r\n              <message>\r\n                <speaker value=\"HUMAN\" />\r\n                <text value=\"public class Main {&#10;    public static void main(String[] args) {&#10;        Controlador controlador = Controlador.getInstancia();&#10;        new Front(controlador);&#10;    }&#10;}&#10;&#10;import Dibujos.PanelPersonalizado;&#10;&#10;import javax.swing.*;&#10;import java.awt.*;&#10;import java.awt.event.ActionEvent;&#10;import java.awt.event.ActionListener;&#10;import java.awt.event.MouseAdapter;&#10;import java.awt.event.MouseEvent;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;public class Front extends JFrame {&#10;    private JPanel panel1;&#10;    private JPanel panel;&#10;    private JButton inicioButton;&#10;    private JButton etapaDelProcesoButton;&#10;    private JButton decisionButton;&#10;    private JButton entradaButton;&#10;    private JButton salidaButton;&#10;    private JButton documentoButton;&#10;    private JButton limpiarButton;&#10;    private JButton FinButton;&#10;    private JPanel columna;&#10;    private List &amp;lt;PanelPersonalizado&amp;gt; listaPaneles;&#10;    private JButton EliminarFiguraButton;&#10;&#10;    public Front(Controlador controlador)&#10;    {&#10;        setContentPane(panel);&#10;        setSize(700, 600);&#10;        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#10;        setTitle(&amp;quot;Graficador Interactivo de Diagramas de flujo&amp;quot;);&#10;        setVisible(true);&#10;        listaPaneles = new ArrayList&amp;lt;&amp;gt;();&#10;        this.columna = new JPanel();&#10;        controlador.initFront(Front.this,listaPaneles, panel);&#10;&#10;&#10;        //botón para dibujar un rectángulo&#10;        etapaDelProcesoButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e)&#10;            {&#10;                controlador.crearProceso(Front.this);&#10;            }&#10;&#10;        });&#10;&#10;&#10;        //boton para dibujar un rombo&#10;        decisionButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e)&#10;            {&#10;                controlador.crearDecision(Front.this);&#10;            }&#10;        });&#10;&#10;        limpiarButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e) {&#10;&#10;                controlador.limpiarPantalla(Front.this);&#10;            }&#10;        });&#10;&#10;        //Dibujar Paralelogramo /__/&#10;        entradaButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e)&#10;            {&#10;                controlador.crearEntreda(Front.this);&#10;            }&#10;        });&#10;&#10;        //Dibujar Paralelogramo /__/&#10;        salidaButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e)&#10;            {&#10;                controlador.crearSalida(Front.this);&#10;            }&#10;        });&#10;&#10;        //Dibujar Impresion /_-/&#10;        documentoButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e)&#10;            {&#10;                controlador.crearImpresion(Front.this);&#10;                int bandera = 0;&#10;                while(bandera &amp;lt; listaPaneles.size()){&#10;                    System.out.println(&amp;quot;Posicion&amp;quot;+bandera+&amp;quot;: Eje Y:&amp;quot;+listaPaneles.get(bandera).getY());&#10;                    bandera++;&#10;                }&#10;            }&#10;        });&#10;&#10;        //Dibujar Rectangulo curvo (__)&#10;        inicioButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e)&#10;            {&#10;                controlador.crearInicio(Front.this);&#10;            }&#10;        });&#10;&#10;        FinButton.addActionListener(new ActionListener()&#10;        {&#10;            @Override&#10;            public void actionPerformed(ActionEvent e)&#10;            {&#10;                controlador.crearFin(Front.this);&#10;            }&#10;        });&#10;    }&#10;&#10;    // Método para obtener la figura clicada en las coordenadas dadas&#10;    private PanelPersonalizado obtenerFiguraClicada(int x, int y) {&#10;        for (PanelPersonalizado figura : listaPaneles) {&#10;            if (figura.getBounds().contains(x, y)) {&#10;                return figura;&#10;            }&#10;        }&#10;        return null; // No se encontró ninguna figura en las coordenadas dadas&#10;    }&#10;&#10;    public JPanel getPanel1()&#10;    {&#10;        return panel1;&#10;    }&#10;&#10;    public JPanel getColumna()&#10;    {&#10;        return columna;&#10;    }&#10;}&#10;&#10;package Dibujos;&#10;import javax.swing.*;&#10;import java.awt.*;&#10;import java.awt.event.MouseAdapter;&#10;import java.util.List;&#10;&#10;public class PanelPersonalizado extends JPanel&#10;{&#10;&#10;    protected String texto;&#10;    protected List &amp;lt;PanelPersonalizado&amp;gt; listaFiguras;&#10;    protected int altura;&#10;    protected int posOriginal = -1;&#10;    protected JPanel contenedor;&#10;&#10;    public PanelPersonalizado(String texto, List &amp;lt;PanelPersonalizado&amp;gt; lista, JPanel _contenedor) {&#10;        this.texto = texto;&#10;        this.listaFiguras = lista;&#10;        this.contenedor = _contenedor;&#10;        setPreferredSize(new Dimension(100, 50));&#10;    }&#10;&#10;&#10;    public void actualizarUbicacion(){&#10;        int indice = listaFiguras.indexOf(this);&#10;&#10;        if(indice != -1){&#10;            int nuevaUbicacion = this.getY();&#10;            altura = this.getHeight();&#10;            posOriginal = nuevaUbicacion;&#10;            listaFiguras.get(indice).setLocation(0, nuevaUbicacion);&#10;            //System.out.println(&amp;quot;Eje Y dentro de la lista: &amp;quot;+listaFiguras.get(indice).getY());&#10;&#10;        }&#10;&#10;    }&#10;&#10;    public void colisionesVisual() {&#10;    int i=0;&#10;    while(i &amp;lt; listaFiguras.size()){&#10;        PanelPersonalizado panelSiguiente = listaFiguras.get(i);&#10;        if(panelSiguiente != this){&#10;            int ejeY = getY();&#10;            int altura = getHeight();&#10;            int ejeYSiguiente = panelSiguiente.getY();&#10;            int alturaSiguiente = panelSiguiente.getHeight();&#10;&#10;            if(ejeY &amp;lt; ejeYSiguiente + alturaSiguiente &amp;amp;&amp;amp; ejeY + altura &amp;gt; ejeYSiguiente){&#10;            }&#10;        }&#10;        i++;&#10;    }&#10;    }&#10;&#10;    public int colisiones() {&#10;        int i=0;&#10;        while(i &amp;lt; listaFiguras.size()){&#10;            PanelPersonalizado panelSiguiente = listaFiguras.get(i);&#10;            if(panelSiguiente != this){&#10;                int ejeY = getY();&#10;                int altura = getHeight();&#10;                int ejeYSiguiente = panelSiguiente.getY();&#10;                int alturaSiguiente = panelSiguiente.getHeight();&#10;&#10;                if(ejeY &amp;lt; ejeYSiguiente + alturaSiguiente &amp;amp;&amp;amp; ejeY + altura &amp;gt; ejeYSiguiente){&#10;                    return i;&#10;                }&#10;            }&#10;            i++;&#10;        }&#10;        return -1;&#10;    }&#10;&#10;&#10;    public void guardarPosicion(int _posOriginal){&#10;        this.posOriginal = _posOriginal;&#10;        System.out.println(&amp;quot;Posicion guardada: &amp;quot;+posOriginal);&#10;    }&#10;&#10;    public int posicionOriginal(){&#10;        return this.posOriginal;&#10;    }&#10;&#10;    public void actualizarPosicion(){&#10;        this.posOriginal = getY();&#10;    }&#10;&#10;    public void cambiarTexto(String nuevoTexto) {&#10;        texto = nuevoTexto;&#10;        repaint(); // Redibujar la figura con el nuevo texto&#10;    }&#10;}&#10;&#10;import Dibujos.*;&#10;import javax.swing.*;&#10;import java.awt.*;&#10;import java.awt.geom.QuadCurve2D;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;public class Controlador {&#10;    private static Controlador instancia;&#10;    private final Graficador graficador;&#10;    private static List&amp;lt;PanelPersonalizado&amp;gt; listaFiguras;&#10;    private static JPanel contenedor;&#10;&#10;&#10;    // Instanciar Singleton&#10;    private Controlador() {&#10;        this.graficador = new Graficador();&#10;    }&#10;&#10;    public static Controlador getInstancia() {&#10;        if (instancia == null) {&#10;            instancia = new Controlador();&#10;        }&#10;        return instancia;&#10;    }&#10;&#10;    //Metodos&#10;    public void initFront(Front front, List&amp;lt;PanelPersonalizado&amp;gt; _listaFiguras, JPanel _contenedor) {&#10;        contenedor = _contenedor;&#10;        listaFiguras = _listaFiguras;&#10;        front.getPanel1().setLayout(new BoxLayout(front.getPanel1(), BoxLayout.Y_AXIS));&#10;        front.getPanel1().setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));&#10;    }&#10;&#10;    public void crearProceso(Front front) {&#10;        PanelPersonalizado nuevo = new DibujoProceso(entradaDeTexto(), listaFiguras, contenedor);&#10;        listaFiguras.add(nuevo);&#10;        front.getPanel1().add(nuevo);&#10;        front.getPanel1().revalidate();&#10;        timer(nuevo);&#10;    }&#10;&#10;&#10;    public void crearImpresion(Front front) {&#10;        PanelPersonalizado nuevo = new DibujoDocumento(entradaDeTexto(), listaFiguras, contenedor);&#10;        listaFiguras.add(nuevo);&#10;        front.getPanel1().add(nuevo);&#10;        front.getPanel1().revalidate();&#10;        timer(nuevo);&#10;    }&#10;&#10;&#10;    public void crearInicio(Front front) {&#10;        PanelPersonalizado nuevo = new DibujoInicio(&amp;quot;Inicio&amp;quot;, listaFiguras, contenedor);&#10;        listaFiguras.add(nuevo);&#10;        front.getPanel1().add(nuevo);&#10;        front.getPanel1().revalidate();&#10;    }&#10;&#10;    public void crearFin(Front front) {&#10;        PanelPersonalizado nuevo = new DibujoFin(&amp;quot;Fin&amp;quot;, listaFiguras, contenedor);&#10;        listaFiguras.add(nuevo);&#10;        front.getPanel1().add(nuevo);&#10;        front.getPanel1().revalidate();&#10;    }&#10;&#10;    public void crearDecision(Front front) {&#10;        PanelPersonalizado nuevo = new DibujarDecision(entradaDeTexto(), listaFiguras, contenedor);&#10;        PanelPersonalizado aux = new DibujoDecisionFin(&amp;quot;&amp;quot;, listaFiguras, contenedor);&#10;        listaFiguras.add(nuevo);&#10;        listaFiguras.add(aux);&#10;        front.getPanel1().add(nuevo);&#10;        front.getPanel1().add(aux);&#10;        front.getPanel1().revalidate();&#10;    }&#10;&#10;    public void crearSalida(Front front) {&#10;        PanelPersonalizado nuevo = new DibujoSalida(entradaDeTexto(), listaFiguras, contenedor);&#10;        listaFiguras.add(nuevo);&#10;        front.getPanel1().add(nuevo);&#10;        front.getPanel1().revalidate();&#10;    }&#10;&#10;    public void crearEntreda(Front front) {&#10;        PanelPersonalizado nuevo = new DibujoEntrada(entradaDeTexto(), listaFiguras, contenedor);&#10;        listaFiguras.add(nuevo);&#10;        front.getPanel1().add(nuevo);&#10;        front.getPanel1().revalidate();&#10;    }&#10;&#10;&#10;    public void limpiarPantalla(Front front) {&#10;        this.graficador.limpiarPantalla(front);&#10;    }&#10;&#10;    //===============================================================================================================&#10;&#10;    private static class Graficador {&#10;        public void dibujarProceso(JPanel lienzo) {&#10;            Graphics g = lienzo.getGraphics();&#10;            g.setColor(Color.BLUE);&#10;            g.drawLine(0, 50, 100, 50);   // Línea superior&#10;            g.drawLine(0, 50, 0, 10);     // Línea izquierda&#10;            g.drawLine(100, 50, 100, 10); // Línea derecha&#10;            g.drawLine(0, 10, 100, 10);   // Línea inferior&#10;        }&#10;&#10;        public void dibujarImpresion(Front front) {&#10;            JPanel lienzo = front.getPanel1();&#10;&#10;            QuadCurve2D curve = new QuadCurve2D.Double();&#10;            Graphics2D lapiz = (Graphics2D) lienzo.getGraphics();&#10;            lapiz.setColor(Color.CYAN);&#10;&#10;            lapiz.drawLine(100, 100, 200, 100);&#10;            lapiz.drawLine(200, 100, 200, 140);&#10;            lapiz.drawLine(100, 100, 100, 150);&#10;            curve.setCurve(100, 150, 125, 165, 150, 150);&#10;            lapiz.draw(curve);&#10;            curve.setCurve(150, 150, 175, 135, 200, 140);&#10;            lapiz.draw(curve);&#10;&#10;        }&#10;&#10;&#10;        public void dibujarInicio(Front front) {&#10;            QuadCurve2D curve = new QuadCurve2D.Double();&#10;            Graphics2D lapiz = (Graphics2D) front.getGraphics();&#10;&#10;            lapiz.setColor(Color.MAGENTA);&#10;            lapiz.drawLine(50, 200, 150, 200);&#10;            lapiz.drawLine(50, 250, 150, 250);&#10;            curve.setCurve(50, 200, 30, 205, 30, 225);&#10;            lapiz.draw(curve);&#10;            curve.setCurve(50, 250, 30, 245, 30, 225);&#10;            lapiz.draw(curve);&#10;            curve.setCurve(150, 200, 170, 205, 170, 225);&#10;            lapiz.draw(curve);&#10;            curve.setCurve(150, 250, 170, 245, 170, 225);&#10;            lapiz.draw(curve);&#10;        }&#10;&#10;        public void dibujarFin(Front front) {&#10;            QuadCurve2D curve = new QuadCurve2D.Double();&#10;            Graphics2D lapiz = (Graphics2D) front.getGraphics();&#10;&#10;            lapiz.setColor(Color.BLACK);&#10;            lapiz.drawLine(50, 200, 150, 200);&#10;            lapiz.drawLine(50, 250, 150, 250);&#10;            curve.setCurve(50, 200, 30, 205, 30, 225);&#10;            lapiz.draw(curve);&#10;            curve.setCurve(50, 250, 30, 245, 30, 225);&#10;            lapiz.draw(curve);&#10;            curve.setCurve(150, 200, 170, 205, 170, 225);&#10;            lapiz.draw(curve);&#10;            curve.setCurve(150, 250, 170, 245, 170, 225);&#10;            lapiz.draw(curve);&#10;        }&#10;&#10;        public void dibujarDecision(Front front) {&#10;            Graphics g = front.getGraphics();&#10;            g.setColor(Color.RED);&#10;            g.drawLine(100, 70, 150, 100);&#10;            g.drawLine(150, 100, 100, 130);&#10;            g.drawLine(100, 130, 50, 100);&#10;            g.drawLine(50, 100, 100, 70);&#10;        }&#10;&#10;&#10;        public void dibujarEntradaSalida(Front front) {&#10;            Graphics g = front.getGraphics();&#10;            g.setColor(Color.orange);&#10;            g.drawLine(125, 150, 250, 150);&#10;            g.drawLine(250, 150, 225, 200);&#10;            g.drawLine(225, 200, 100, 200);&#10;            g.drawLine(100, 200, 125, 150);&#10;        }&#10;&#10;&#10;        public void limpiarPantalla(Front front) {&#10;            JPanel lienzo = front.getPanel1();&#10;&#10;            lienzo.removeAll();&#10;            lienzo.repaint();&#10;        }&#10;    }&#10;    //===============================================================================================================&#10;&#10;    public static String entradaDeTexto() {&#10;        JTextField textField = new JTextField();&#10;        Object[] message = {&#10;                &amp;quot;Ingrese datos:&amp;quot;, textField&#10;        };&#10;        int option = JOptionPane.showConfirmDialog(null, message, &amp;quot;Datos&amp;quot;, JOptionPane.OK_CANCEL_OPTION);&#10;        if (option == JOptionPane.OK_OPTION) {&#10;            return textField.getText();&#10;        } else {&#10;            return &amp;quot;----&amp;quot;;&#10;        }&#10;    }&#10;&#10;    public void timer(PanelPersonalizado nuevo) {&#10;        Timer timer = new Timer(100, e -&amp;gt; {&#10;            nuevo.actualizarUbicacion();&#10;&#10;            for (PanelPersonalizado figura : listaFiguras) {&#10;                figura.actualizarUbicacion();&#10;            }&#10;        });&#10;        timer.setRepeats(false);&#10;        timer.start();&#10;    }&#10;}&#10;&#10;package Dibujos;&#10;import javax.swing.*;&#10;import java.awt.*;&#10;import java.awt.event.MouseAdapter;&#10;import java.awt.event.MouseEvent;&#10;import java.awt.event.MouseMotionListener;&#10;import java.util.List;&#10;&#10;public class DibujoProceso extends PanelPersonalizado {&#10;    private int ultimoEjeY;&#10;    private boolean moviendo;&#10;    private int ejeYMouse;&#10;    public DibujoProceso(String texto, List &amp;lt;PanelPersonalizado&amp;gt; lista, JPanel _contenedor) {&#10;        super(texto,lista,_contenedor);&#10;        addMouseListener(new MouseAdapter() {&#10;            @Override&#10;            public void mousePressed(MouseEvent e) {&#10;                ultimoEjeY = e.getYOnScreen();&#10;                moviendo = true;&#10;                //System.out.println(&amp;quot;Moviendo &amp;quot;+&amp;quot;Proceso&amp;quot;+&amp;quot; &amp;quot;); //Para verificar el movimiento sostenido&#10;&#10;            }&#10;&#10;            @Override&#10;            public void mouseReleased(MouseEvent e) {&#10;                moviendo = false;&#10;                int indice = colisiones();&#10;                if(indice != -1){&#10;                    intercambiarPosiciones();&#10;                }&#10;            }&#10;        });&#10;&#10;        addMouseMotionListener(new MouseMotionListener() {&#10;            @Override&#10;            //Aqui se implementa la toma de un panel y arrastre&#10;            public void mouseDragged(MouseEvent e) {&#10;                if(moviendo){&#10;                    int cambioPosicionY = e.getYOnScreen() - ultimoEjeY;&#10;                    setLocation(getX(), getY() + cambioPosicionY);&#10;                    ultimoEjeY = e.getYOnScreen();&#10;                    colisionesVisual();&#10;                }&#10;            }&#10;&#10;            @Override&#10;            //Detectamos la posicion del mouse dentro de un panel&#10;            public void mouseMoved(MouseEvent e) {&#10;                ejeYMouse = e.getY();&#10;                setCursor(Cursor.getPredefinedCursor(Cursor.N_RESIZE_CURSOR));&#10;                repaint(); //Volvemos a dibujar el panel&#10;            }&#10;        });&#10;&#10;        // Para editar texto ya ingresado&#10;        addMouseListener(new MouseAdapter() {&#10;            @Override&#10;            public void mouseClicked(MouseEvent e) {&#10;                super.mouseClicked(e);&#10;                if (e.getClickCount() == 2) { // Doble clic para editar el texto&#10;                    String nuevoTexto = JOptionPane.showInputDialog(null, &amp;quot;Editar texto:&amp;quot;, texto);&#10;                    if (nuevoTexto != null &amp;amp;&amp;amp; !nuevoTexto.isEmpty()) {&#10;                        cambiarTexto(nuevoTexto); // Actualizar el texto de la figura&#10;                    }&#10;                }&#10;&#10;                // Verificar si se hizo clic derecho&#10;                if (e.getButton() == MouseEvent.BUTTON3) {&#10;                    int option = JOptionPane.showConfirmDialog(null, &amp;quot;¿Eliminar esta figura?&amp;quot;, &amp;quot;Eliminar Figura&amp;quot;, JOptionPane.YES_NO_OPTION);&#10;                    if (option == JOptionPane.YES_OPTION) {&#10;                        eliminarFigura();&#10;                    }&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    protected void paintComponent(Graphics g) {&#10;&#10;        super.paintComponent(g);&#10;&#10;&#10;        int panelWidth = getWidth();&#10;        int panelHeight = getHeight();&#10;&#10;        // Coordenadas del rectángulo&#10;        int x1 = (int) ((panelWidth / 4)+panelWidth*0.1);                  // Coordenada x del lado izquierdo del rectángulo&#10;        int x2 = (int) ((panelWidth - (panelWidth / 4))-panelWidth*0.1);   // Coordenada x del lado derecho del rectángulo&#10;        int y1 = (int) ((panelHeight / 4)+panelHeight*0.15);                 // Coordenada y del lado superior del rectángulo&#10;        int y2 = (int) ((panelHeight - (panelHeight / 4))-panelHeight*0.15); // Coordenada y del lado inferior del rectángulo&#10;&#10;        // Coordenadas de Flujo&#10;        int centro_x = panelWidth/2;&#10;&#10;&#10;        // Dibujar las líneas que forman el rectángulo&#10;&#10;        g.setColor(Color.MAGENTA);&#10;        g.drawLine(x1, y1, x2, y1);     // Lado superior&#10;        g.drawLine(x2, y1, x2, y2);     // Lado derecho&#10;        g.drawLine(x2, y2, x1, y2);     // Lado inferior&#10;        g.drawLine(x1, y2, x1, y1);     // Lado izquierdo&#10;&#10;        // Dibujar flujo&#10;        g.setColor(Color.BLACK);&#10;        g.drawLine(centro_x,0,centro_x,y1);        // Linea superior&#10;        g.drawLine(centro_x,y2,centro_x,panelHeight);  // Linea inferior&#10;        g.drawLine(centro_x,y1,centro_x+10,y1-10);&#10;        g.drawLine(centro_x,y1,centro_x-10,y1-10);&#10;&#10;&#10;        // Dibuja el texto centrado&#10;        FontMetrics metrics = g.getFontMetrics();&#10;        int x = (getWidth() - metrics.stringWidth(texto)) / 2;&#10;        int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();&#10;        g.drawString(texto, x, y);&#10;    }&#10;&#10;    public void intercambiarPosiciones(){&#10;        int indice = colisiones();&#10;        if (indice != -1) {&#10;            PanelPersonalizado panelActual = listaFiguras.get(indice);&#10;            int indiceAnterior = indice - 1;&#10;&#10;            if (indiceAnterior &amp;gt;= 0) {&#10;                PanelPersonalizado panelAnterior = listaFiguras.get(indiceAnterior);&#10;                listaFiguras.set(indice, panelAnterior);&#10;                listaFiguras.set(indiceAnterior, panelActual);&#10;                actualizarPosicionesVisuales();&#10;            }&#10;        }&#10;    }&#10;&#10;    private void actualizarPosicionesVisuales() {&#10;        for (int i = 0; i &amp;lt; listaFiguras.size(); i++) {&#10;            PanelPersonalizado panel = listaFiguras.get(i);&#10;            panel.setLocation(0, i * panel.getHeight());&#10;        }&#10;        contenedor.repaint();&#10;    }&#10;&#10;    // Método para eliminar la figura y reorganizar las posiciones&#10;    private void eliminarFigura() {&#10;&#10;    }&#10;}&#10;&#10;Así cómo la clase &amp;quot;DibujoProceso&amp;quot; hay similares para el resto de figuras de un diagrama de flujo.&#10; &#10;Quiero que el proyecto sea capaz de permitir al usuario eliminar una figura del diagrama. Y quiero que se BORREN, no que sean tapadas por otra figura.\" />\r\n              </message>\r\n              <message>\r\n                <speaker value=\"ASSISTANT\" />\r\n                <text value=\"Para permitir que el usuario elimine una figura del diagrama y que se borre completamente, puedes seguir estos pasos:&#10;&#10;1. En la clase `PanelPersonalizado`, agrega un método para eliminar la figura de la lista de figuras y del contenedor:&#10;&#10;```java&#10;public void eliminarFigura() {&#10;    listaFiguras.remove(this);&#10;    contenedor.remove(this);&#10;    contenedor.revalidate();&#10;    contenedor.repaint();&#10;}&#10;```&#10;&#10;2. En cada subclase de `PanelPersonalizado` (como `DibujoProceso`, `DibujoDecision`, etc.), sobrescribe el método `mouseClicked` para detectar el clic derecho del mouse y mostrar un diálogo de confirmación para eliminar la figura:&#10;&#10;```java&#10;@Override&#10;protected void paintComponent(Graphics g) {&#10;    // ... (código existente)&#10;&#10;    addMouseListener(new MouseAdapter() {&#10;        @Override&#10;        public void mouseClicked(MouseEvent e) {&#10;            super.mouseClicked(e);&#10;            if (e.getButton() == MouseEvent.BUTTON3) { // Clic derecho&#10;                int option = JOptionPane.showConfirmDialog(null, &quot;¿Eliminar esta figura?&quot;, &quot;Eliminar Figura&quot;, JOptionPane.YES_NO_OPTION);&#10;                if (option == JOptionPane.YES_OPTION) {&#10;                    eliminarFigura();&#10;                }&#10;            }&#10;        }&#10;    });&#10;}&#10;```&#10;&#10;3. En el método `eliminarFigura()` de `PanelPersonalizado`, agrega código para reorganizar las posiciones de las figuras restantes después de eliminar una figura:&#10;&#10;```java&#10;public void eliminarFigura() {&#10;    listaFiguras.remove(this);&#10;    contenedor.remove(this);&#10;    reorganizarPosiciones();&#10;    contenedor.revalidate();&#10;    contenedor.repaint();&#10;}&#10;&#10;private void reorganizarPosiciones() {&#10;    int y = 0;&#10;    for (PanelPersonalizado panel : listaFiguras) {&#10;        panel.setLocation(0, y);&#10;        y += panel.getHeight();&#10;    }&#10;}&#10;```&#10;&#10;Con estos cambios, cuando el usuario haga clic derecho en una figura, se mostrará un diálogo de confirmación. Si el usuario confirma, la figura se eliminará de la lista y del contenedor, y las posiciones de las figuras restantes se reorganizarán automáticamente.&#10;&#10;Asegúrate de aplicar estos cambios en todas las subclases de `PanelPersonalizado` que representan las diferentes figuras del diagrama de flujo.\" />\r\n              </message>\r\n            </list>\r\n          </messages>\r\n          <updatedAt value=\"2024-04-12T16:54:48.1567282\" />\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"4c05f7c2-d62c-454c-9205-9b4b70eecdd3\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"87dd538c-9b1d-442e-8cec-e44a2a99a73f\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <internalId value=\"ae4a774f-853a-4229-80ae-7f8bec90be87\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"d27ab7b3-cf58-49c6-8ba1-36eda54234c3\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"ab98d960-9f1c-4982-a9c1-69d8ccab8c05\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"66e8c3f3-efd5-47f3-af94-b1db9e93c6f5\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"a8e4f39e-8c28-431a-95f9-c373c24690a0\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"df244630-05a4-41b3-9c55-256e7a242923\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"415a4b75-caf3-4902-b1d3-589cae5e5714\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"e907cf6e-d317-429c-82ef-7825f6e52cc7\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"12b49639-fa76-4dd2-8e1a-de761a97ac2d\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"d826a704-ef43-4200-91bb-e17df1ca3e38\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"76c50426-59dd-47f9-90c6-aefdf54f696d\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"3a78a25e-631b-4794-a6af-844bbd0c21cd\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n        <chat>\r\n          <accountId value=\"VXNlcjozODM1ODI=\" />\r\n          <internalId value=\"785f618d-b507-4aa8-a0bd-f7698e2c33d5\" />\r\n          <llm>\r\n            <llm>\r\n              <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n              <provider value=\"Anthropic\" />\r\n              <title value=\"Claude 3 Sonnet\" />\r\n            </llm>\r\n          </llm>\r\n        </chat>\r\n      </list>\r\n    </chats>\r\n    <defaultLlm>\r\n      <llm>\r\n        <model value=\"anthropic/claude-3-sonnet-20240229\" />\r\n        <provider value=\"Anthropic\" />\r\n        <title value=\"Claude 3 Sonnet\" />\r\n      </llm>\r\n    </defaultLlm>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/cody_history.xml b/.idea/cody_history.xml
--- a/.idea/cody_history.xml	
+++ b/.idea/cody_history.xml	
@@ -202,6 +202,50 @@
             </llm>
           </llm>
         </chat>
+        <chat>
+          <accountId value="VXNlcjozODM1ODI=" />
+          <internalId value="d9cc0942-aec9-4425-b99e-2e012309164d" />
+          <llm>
+            <llm>
+              <model value="anthropic/claude-3-sonnet-20240229" />
+              <provider value="Anthropic" />
+              <title value="Claude 3 Sonnet" />
+            </llm>
+          </llm>
+        </chat>
+        <chat>
+          <accountId value="VXNlcjozODM1ODI=" />
+          <internalId value="92e6dc5c-3260-4473-bc69-b199ee14440c" />
+          <llm>
+            <llm>
+              <model value="anthropic/claude-3-sonnet-20240229" />
+              <provider value="Anthropic" />
+              <title value="Claude 3 Sonnet" />
+            </llm>
+          </llm>
+        </chat>
+        <chat>
+          <accountId value="VXNlcjozODM1ODI=" />
+          <internalId value="97cab05d-7201-482c-a028-3a2ad89e1435" />
+          <llm>
+            <llm>
+              <model value="anthropic/claude-3-sonnet-20240229" />
+              <provider value="Anthropic" />
+              <title value="Claude 3 Sonnet" />
+            </llm>
+          </llm>
+        </chat>
+        <chat>
+          <accountId value="VXNlcjozODM1ODI=" />
+          <internalId value="77d07765-ae55-4d0a-a6fc-26962efc4039" />
+          <llm>
+            <llm>
+              <model value="anthropic/claude-3-sonnet-20240229" />
+              <provider value="Anthropic" />
+              <title value="Claude 3 Sonnet" />
+            </llm>
+          </llm>
+        </chat>
       </list>
     </chats>
     <defaultLlm>
Index: src/Dibujos/PanelesNoMovibles/DibujoInicio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesNoMovibles;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.geom.QuadCurve2D;\r\nimport java.util.List;\r\n\r\npublic class DibujoInicio extends PanelPersonalizado {\r\n    public DibujoInicio(String texto, List<PanelPersonalizado> lista, JPanel _contenedor)\r\n    {\r\n\r\n        super(texto,lista,_contenedor);\r\n        this.habilitado = false;\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n\r\n        super.paintComponent(g);\r\n\r\n        int panelWidth = getWidth();\r\n        int panelHeight = getHeight();\r\n\r\n        //Coordenadas de la figura\r\n        int x1 = (int) ((panelWidth / 4)+panelWidth*0.1);                  // Coordenada x del lado izquierdo del rectángulo\r\n        int x2 = (int) ((panelWidth - (panelWidth / 4))-panelWidth*0.1);   // Coordenada x del lado derecho del rectángulo\r\n        int y1 = (int) ((panelHeight / 4)+panelHeight*0.15);                 // Coordenada y del lado superior del rectángulo\r\n        int y2 = (int) ((panelHeight - (panelHeight / 4))-panelHeight*0.15); // Coordenada y del lado inferior del rectángulo\r\n\r\n        // Radio de los bordes redondeados\r\n        int arcWidth = 100;\r\n        int arcHeight = 100;\r\n\r\n        g.setColor(Color.BLACK);\r\n        int centro_x = panelWidth / 2;\r\n        Graphics2D g2d = (Graphics2D) g;\r\n\r\n        //Dibujar figura de entrada\r\n        g2d.drawRoundRect(x1, y1, x2 - x1, y2 - y1 + 30, arcWidth, arcHeight);\r\n\r\n        // Dibujar flujo\r\n        g.drawLine(centro_x, y2 + 30, centro_x, panelHeight + 30);         // Linea inferior\r\n        \r\n        // Dibujar el texto centrado\r\n        FontMetrics metrics = g.getFontMetrics();\r\n        int x = (getWidth() - metrics.stringWidth(texto)) / 2;\r\n        int y = ((getHeight() + 30 - metrics.getHeight()) / 2) + metrics.getAscent();\r\n        g.drawString(texto, x, y);\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesNoMovibles/DibujoInicio.java b/src/Dibujos/PanelesNoMovibles/DibujoInicio.java
--- a/src/Dibujos/PanelesNoMovibles/DibujoInicio.java	
+++ b/src/Dibujos/PanelesNoMovibles/DibujoInicio.java	
@@ -8,12 +8,10 @@
 import java.util.List;
 
 public class DibujoInicio extends PanelPersonalizado {
-    public DibujoInicio(String texto, List<PanelPersonalizado> lista, JPanel _contenedor)
-    {
-
+    public DibujoInicio(String texto, List<PanelPersonalizado> lista, JPanel _contenedor) {
         super(texto,lista,_contenedor);
         this.habilitado = false;
-
+        setPreferredSize(new Dimension(200, 200));
     }
 
     @Override
@@ -39,15 +37,15 @@
         Graphics2D g2d = (Graphics2D) g;
 
         //Dibujar figura de entrada
-        g2d.drawRoundRect(x1, y1, x2 - x1, y2 - y1 + 30, arcWidth, arcHeight);
+        g2d.drawRoundRect(x1, y1, x2 - x1, y2 - y1, arcWidth, arcHeight);
 
         // Dibujar flujo
-        g.drawLine(centro_x, y2 + 30, centro_x, panelHeight + 30);         // Linea inferior
+        g.drawLine(centro_x, y2, centro_x, panelHeight);         // Linea inferior
         
         // Dibujar el texto centrado
         FontMetrics metrics = g.getFontMetrics();
         int x = (getWidth() - metrics.stringWidth(texto)) / 2;
-        int y = ((getHeight() + 30 - metrics.getHeight()) / 2) + metrics.getAscent();
+        int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();
         g.drawString(texto, x, y);
     }
 }
Index: src/Dibujos/PanelesNoMovibles/DibujoFin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesNoMovibles;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\n\r\npublic class DibujoFin extends PanelPersonalizado {\r\n    public DibujoFin(String texto, List<PanelPersonalizado> lista, JPanel _contenedor) {\r\n        super(texto,lista,_contenedor);\r\n        this.habilitado = false;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n\r\n        super.paintComponent(g);\r\n\r\n        int panelWidth = getWidth();\r\n        int panelHeight = getHeight();\r\n\r\n        // Coordenadas de la figura\r\n        int x1 = (int) ((panelWidth / 4)+panelWidth*0.1);                    // Coordenada x del lado izquierdo del rectángulo\r\n        int x2 = (int) ((panelWidth - (panelWidth / 4))-panelWidth*0.1);     // Coordenada x del lado derecho del rectángulo\r\n        int y1 = (int) ((panelHeight / 4)+panelHeight*0.15);                 // Coordenada y del lado superior del rectángulo\r\n        int y2 = (int) ((panelHeight - (panelHeight / 4))-panelHeight*0.15); // Coordenada y del lado inferior del rectángulo\r\n\r\n        // Radio de los bordes redondeados\r\n        int arcWidth = 100;\r\n        int arcHeight = 100;\r\n\r\n        g.setColor(Color.BLACK);\r\n        int centro_x = panelWidth / 2;\r\n        Graphics2D g2d = (Graphics2D) g;\r\n\r\n        //Dibujar figura de entrada\r\n        g2d.drawRoundRect(x1, y1, x2 - x1, y2 - y1 + 30, arcWidth, arcHeight);\r\n\r\n        // Dibujar flujo\r\n        g.setColor(Color.BLACK);\r\n        g.drawLine(centro_x, 0, centro_x, y1);               // Linea superior\r\n\r\n        g.drawLine(centro_x, y1, centro_x + 10, y1 - 10);    //  Flecha\r\n        g.drawLine(centro_x, y1, centro_x - 10, y1 - 10);    //  de flujo\r\n\r\n        // Dibujar el texto centrado\r\n        FontMetrics metrics = g.getFontMetrics();\r\n        int x = (getWidth() - metrics.stringWidth(texto)) / 2;\r\n        int y = ((getHeight() + 30 - metrics.getHeight()) / 2) + metrics.getAscent();\r\n        g.drawString(texto, x, y);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesNoMovibles/DibujoFin.java b/src/Dibujos/PanelesNoMovibles/DibujoFin.java
--- a/src/Dibujos/PanelesNoMovibles/DibujoFin.java	
+++ b/src/Dibujos/PanelesNoMovibles/DibujoFin.java	
@@ -10,6 +10,7 @@
     public DibujoFin(String texto, List<PanelPersonalizado> lista, JPanel _contenedor) {
         super(texto,lista,_contenedor);
         this.habilitado = false;
+        setPreferredSize(new Dimension(200, 200));
     }
 
     @Override
@@ -35,7 +36,7 @@
         Graphics2D g2d = (Graphics2D) g;
 
         //Dibujar figura de entrada
-        g2d.drawRoundRect(x1, y1, x2 - x1, y2 - y1 + 30, arcWidth, arcHeight);
+        g2d.drawRoundRect(x1, y1, x2 - x1, y2 - y1, arcWidth, arcHeight);
 
         // Dibujar flujo
         g.setColor(Color.BLACK);
@@ -47,7 +48,7 @@
         // Dibujar el texto centrado
         FontMetrics metrics = g.getFontMetrics();
         int x = (getWidth() - metrics.stringWidth(texto)) / 2;
-        int y = ((getHeight() + 30 - metrics.getHeight()) / 2) + metrics.getAscent();
+        int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();
         g.drawString(texto, x, y);
     }
 }
