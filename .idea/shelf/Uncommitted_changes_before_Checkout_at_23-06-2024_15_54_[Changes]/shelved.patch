Index: src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesMovibles.Decision;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\n\r\npublic class DibujoDecisionFin extends PanelPersonalizado {\r\n\r\n    public DibujoDecisionFin(String texto, List<PanelPersonalizado> lista, JPanel _contenedor,GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente) {\r\n        super(texto, lista, _contenedor,_restriciones,_ventanaEmergente);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n\r\n        int panelWidth = getWidth();\r\n        int panelHeight = getHeight();\r\n\r\n        int centro_x = panelWidth/2;        // Centro horizontal\r\n        int centro_y = panelHeight/2;     // Centro vertical\r\n\r\n        int cuarto = panelWidth/4;\r\n\r\n        // Dibujar las líneas que forman el rombo\r\n        g.setColor(Color.BLACK);\r\n        g.drawLine(cuarto,0,cuarto, centro_y);                // Linea derecha\r\n        g.drawLine(cuarto*3, 0,cuarto*3, centro_y);   // Linea izquierda\r\n        g.drawLine(cuarto, centro_y,cuarto*3, centro_y);     // Linea central\r\n        g.drawLine(centro_x, centro_y,centro_x, panelHeight);    // Linea baja\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java
--- a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java	(revision f5ec4d1cb7d01fbc57e41fcce2589f8927bf9f31)
+++ b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java	(date 1719172425663)
@@ -17,6 +17,8 @@
     @Override
     protected void paintComponent(Graphics g) {
         super.paintComponent(g);
+        Graphics2D g2d = (Graphics2D) g.create();
+        g2d.scale(zoomFactor, zoomFactor);
 
         int panelWidth = getWidth();
         int panelHeight = getHeight();
@@ -27,10 +29,10 @@
         int cuarto = panelWidth/4;
 
         // Dibujar las líneas que forman el rombo
-        g.setColor(Color.BLACK);
-        g.drawLine(cuarto,0,cuarto, centro_y);                // Linea derecha
-        g.drawLine(cuarto*3, 0,cuarto*3, centro_y);   // Linea izquierda
-        g.drawLine(cuarto, centro_y,cuarto*3, centro_y);     // Linea central
-        g.drawLine(centro_x, centro_y,centro_x, panelHeight);    // Linea baja
+        g2d.setColor(Color.BLACK);
+        g2d.drawLine(cuarto,0,cuarto, centro_y);                // Linea derecha
+        g2d.drawLine(cuarto*3, 0,cuarto*3, centro_y);   // Linea izquierda
+        g2d.drawLine(cuarto, centro_y,cuarto*3, centro_y);     // Linea central
+        g2d.drawLine(centro_x, centro_y,centro_x, panelHeight);    // Linea baja
     }
 }
Index: src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesMovibles.Decision;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DibujoDecisionInterno extends JPanel {\r\n\r\n    private final DesicionInterna verdadero;\r\n    private final DesicionInterna falso;\r\n\r\n    public DibujoDecisionInterno()\r\n    {\r\n        setPreferredSize(new Dimension(200, 400));\r\n        this.setLayout(new BoxLayout(DibujoDecisionInterno.this, BoxLayout.X_AXIS));\r\n        this.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\r\n\r\n        this.verdadero = new DesicionInterna();\r\n        this.falso = new DesicionInterna();\r\n\r\n        this.verdadero.setLayout(new BoxLayout(this.verdadero, BoxLayout.Y_AXIS));\r\n        this.verdadero.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\r\n        this.verdadero.add(new DesicionVacia(null,null,null,null,null));\r\n\r\n\r\n        this.falso.setLayout(new BoxLayout(this.falso, BoxLayout.Y_AXIS));\r\n        this.falso.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\r\n        this.falso.add(new DesicionVacia(null,null,null,null,null));\r\n\r\n        this.add(verdadero);\r\n        this.add(falso);\r\n    }\r\n\r\n\r\n    public JPanel getVerdadero() {\r\n        return verdadero;\r\n    }\r\n\r\n    public List<PanelPersonalizado> getListaVerdadera()\r\n    {\r\n        return verdadero.getListaFiguras();\r\n    }\r\n\r\n    public List<PanelPersonalizado> getListaFalsa()\r\n    {\r\n        return falso.getListaFiguras();\r\n    }\r\n\r\n    public JPanel getFalso() {\r\n        return falso;\r\n    }\r\n\r\n    public void ajustarSize()\r\n    {\r\n\r\n        int alturaVer = 0;\r\n        int alturaFal = 0;\r\n\r\n        int anchoVer  = 0;\r\n        int anchoFal  = 0;\r\n\r\n        JPanel panelVer = this.getVerdadero();\r\n        JPanel panelFal = this.getFalso();\r\n\r\n\r\n\r\n        for (JPanel componete: this.getListaVerdadera())\r\n        {\r\n\r\n            alturaVer += (int) componete.getPreferredSize().getHeight();\r\n            anchoVer   = Math.max( anchoVer , (int) componete.getPreferredSize().getWidth() );\r\n\r\n        }\r\n\r\n\r\n        for (JPanel componete: this.getListaFalsa())\r\n        {\r\n\r\n            alturaFal += (int) componete.getPreferredSize().getHeight();\r\n            anchoFal   = Math.max( anchoFal , (int) componete.getPreferredSize().getWidth() );\r\n\r\n        }\r\n\r\n\r\n\r\n        int altura = Math.max(alturaVer, alturaFal);\r\n        int ancho = Math.max(anchoVer,anchoFal);\r\n\r\n        Dimension size = new Dimension(ancho,altura);\r\n\r\n        panelVer.setPreferredSize(size);\r\n        panelFal.setPreferredSize(size);\r\n\r\n        panelVer.revalidate();\r\n        panelFal.revalidate();\r\n\r\n\r\n        Dimension sizeG = new Dimension(ancho * 2 , altura );\r\n\r\n        this.setPreferredSize(sizeG);\r\n        this.revalidate();\r\n    }\r\n\r\n\r\n    public class DesicionInterna extends JPanel {\r\n        private final List<PanelPersonalizado> listaFiguras;\r\n\r\n        DesicionInterna() {\r\n            listaFiguras = new ArrayList<>();\r\n        }\r\n\r\n        @Override\r\n        protected void paintComponent(Graphics g) {\r\n            super.paintComponent(g);\r\n\r\n            g.setColor(Color.BLACK);\r\n\r\n            int ancho = this.getWidth();\r\n            int alto = this.getHeight();\r\n\r\n            g.drawLine(ancho / 2, 0, ancho / 2, alto);\r\n        }\r\n\r\n\r\n\r\n        public List<PanelPersonalizado> getListaFiguras()\r\n        {\r\n            return listaFiguras;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java
--- a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java	(revision f5ec4d1cb7d01fbc57e41fcce2589f8927bf9f31)
+++ b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java	(date 1719172425671)
@@ -53,6 +53,7 @@
         return falso;
     }
 
+
     public void ajustarSize()
     {
 
Index: src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesMovibles.Decision;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\n\r\npublic class DesicionVacia extends PanelPersonalizado {\r\n\r\n    public DesicionVacia(String _texto, List<PanelPersonalizado> lista, JPanel _contenedor,GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente) {\r\n        super(_texto, lista, _contenedor,_restriciones,_ventanaEmergente);\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n\r\n        g.setColor(Color.BLACK);\r\n\r\n        int ancho = this.getWidth();\r\n        int alto = this.getHeight();\r\n\r\n        g.drawLine(ancho/2,0,ancho/2,alto);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java b/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java
--- a/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java	(revision f5ec4d1cb7d01fbc57e41fcce2589f8927bf9f31)
+++ b/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java	(date 1719172425677)
@@ -16,12 +16,14 @@
     @Override
     protected void paintComponent(Graphics g) {
         super.paintComponent(g);
+        Graphics2D g2d = (Graphics2D) g.create();
+        g2d.scale(zoomFactor, zoomFactor);
 
-        g.setColor(Color.BLACK);
+        g2d.setColor(Color.BLACK);
 
         int ancho = this.getWidth();
         int alto = this.getHeight();
 
-        g.drawLine(ancho/2,0,ancho/2,alto);
+        g2d.drawLine(ancho/2,0,ancho/2,alto);
     }
 }
Index: src/Front.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Dibujos.PanelPersonalizado;\r\nimport Dibujos.Validador.Validador;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Front extends JFrame {\r\n\r\n    private      JPanel panel1;\r\n    private      JPanel panel;\r\n    private      JPanel pseudocodio;\r\n    private     JButton etapaDelProcesoButton;\r\n    private     JButton decisionButton;\r\n    private     JButton entradaButton;\r\n    private     JButton salidaButton;\r\n    private     JButton documentoButton;\r\n    private     JButton limpiarButton;\r\n    private     JButton whileButton;\r\n    private     JButton pseudoCodigoButton;\r\n    private     JButton forButton;\r\n    private     JButton doWhileButton;\r\n    private     JScrollPane scroll;\r\n    private List <PanelPersonalizado> listaPaneles;\r\n\r\n    public Front(Controlador controlador)\r\n    {\r\n\r\n        setContentPane(panel);\r\n        setSize(700, 600);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setTitle(\"Graficador Interactivo de Diagramas de flujo\");\r\n        setVisible(true);\r\n\r\n        listaPaneles = new ArrayList<>();\r\n\r\n        controlador.initFront(Front.this,listaPaneles,this.scroll,this.panel1);\r\n\r\n\r\n\r\n        //botón para dibujar un rectángulo\r\n        etapaDelProcesoButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"proceso\");\r\n            }\r\n\r\n        });\r\n\r\n\r\n        //boton para dibujar un rombo\r\n        decisionButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"decision\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        limpiarButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                controlador.limpiarPantalla(Front.this);\r\n                listaPaneles = new ArrayList<>();\r\n                controlador.initFront(Front.this,listaPaneles,scroll,panel1);\r\n\r\n            }\r\n\r\n        });\r\n\r\n        //Dibujar Paralelogramo /__/\r\n        entradaButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"entrada\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        //Dibujar Paralelogramo /__/\r\n        salidaButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"salida\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        //Dibujar Impresion /_-/\r\n        documentoButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"documento\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        pseudoCodigoButton.addActionListener(new ActionListener() {\r\n\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.pseudoCodigo(Front.this);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n        forButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                controlador.crearPanel(Front.this,\"for\");\r\n            }\r\n        });\r\n\r\n        whileButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                controlador.crearPanel(Front.this,\"while\");\r\n            }\r\n        });\r\n\r\n        doWhileButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                controlador.crearPanel(Front.this,\"do-while\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public JPanel getPanel1()\r\n    {\r\n        return  this.panel1;\r\n    }\r\n\r\n    public JPanel getPseudocodio()\r\n    {\r\n        return this.pseudocodio;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Front.java b/src/Front.java
--- a/src/Front.java	(revision f5ec4d1cb7d01fbc57e41fcce2589f8927bf9f31)
+++ b/src/Front.java	(date 1719172428931)
@@ -1,6 +1,6 @@
 import Dibujos.PanelPersonalizado;
 import Dibujos.Validador.Validador;
-
+import Dibujos.PanelesMovibles.Decision.DibujoDecisionInterno;
 import javax.swing.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
