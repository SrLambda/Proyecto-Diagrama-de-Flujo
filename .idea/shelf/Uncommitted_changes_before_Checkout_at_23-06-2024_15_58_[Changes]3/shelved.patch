Index: src/Front.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Dibujos.PanelPersonalizado;\r\nimport Dibujos.Validador.Validador;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Front extends JFrame {\r\n\r\n    private      JPanel panel1;\r\n    private      JPanel panel;\r\n    private      JPanel pseudocodio;\r\n    private     JButton etapaDelProcesoButton;\r\n    private     JButton decisionButton;\r\n    private     JButton entradaButton;\r\n    private     JButton salidaButton;\r\n    private     JButton documentoButton;\r\n    private     JButton limpiarButton;\r\n    private     JButton whileButton;\r\n    private     JButton pseudoCodigoButton;\r\n    private     JButton forButton;\r\n    private     JButton doWhileButton;\r\n    private     JScrollPane scroll;\r\n    // Crear los botones\r\n    private     JButton zoomin;\r\n    private     JButton zoomout;\r\n    private List <PanelPersonalizado> listaPaneles;\r\n    private double zoomFactor = 1.0;\r\n\r\n    public Front(Controlador controlador)\r\n    {\r\n\r\n        setContentPane(panel);\r\n        setSize(700, 600);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setTitle(\"Graficador Interactivo de Diagramas de flujo\");\r\n        setVisible(true);\r\n\r\n        listaPaneles = new ArrayList<>();\r\n\r\n        controlador.initFront(Front.this,listaPaneles,this.scroll,this.panel1);\r\n\r\n        //botón para dibujar un rectángulo\r\n        etapaDelProcesoButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"proceso\");\r\n            }\r\n\r\n        });\r\n\r\n\r\n        //boton para dibujar un rombo\r\n        decisionButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"decision\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        limpiarButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                controlador.limpiarPantalla(Front.this);\r\n                listaPaneles = new ArrayList<>();\r\n                controlador.initFront(Front.this,listaPaneles,scroll,panel1);\r\n\r\n            }\r\n\r\n        });\r\n\r\n        //Dibujar Paralelogramo /__/\r\n        entradaButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"entrada\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        //Dibujar Paralelogramo /__/\r\n        salidaButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"salida\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        //Dibujar Impresion /_-/\r\n        documentoButton.addActionListener(new ActionListener()\r\n        {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.crearPanel(Front.this,\"documento\");\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        pseudoCodigoButton.addActionListener(new ActionListener() {\r\n\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n\r\n                controlador.pseudoCodigo(Front.this);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n        forButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                controlador.crearPanel(Front.this,\"for\");\r\n            }\r\n        });\r\n\r\n        whileButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                controlador.crearPanel(Front.this,\"while\");\r\n            }\r\n        });\r\n\r\n        doWhileButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                controlador.crearPanel(Front.this,\"do-while\");\r\n            }\r\n        });\r\n\r\n        zoomin.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                zoomIn();\r\n            }\r\n        });\r\n\r\n        zoomout.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                zoomOut();\r\n            }\r\n        });\r\n    }\r\n\r\n    public JPanel getPanel1()\r\n    {\r\n        return  this.panel1;\r\n    }\r\n\r\n    public JPanel getPseudocodio()\r\n    {\r\n        return this.pseudocodio;\r\n    }\r\n\r\n    private void zoomIn() {\r\n        zoomFactor *= 1.025; // Aumentar el zoom en un 10%\r\n        applyZoom();\r\n    }\r\n\r\n    private void zoomOut() {\r\n        zoomFactor /= 1.025; // Reducir el zoom en un 10%\r\n        applyZoom();\r\n    }\r\n\r\n    private void applyZoom() {\r\n        for (PanelPersonalizado panel : listaPaneles) {\r\n            panel.setZoomFactor(zoomFactor); // Aplicar el factor de zoom a cada panel personalizado\r\n\r\n            // Ajustar tamaño y posición de cada panel\r\n            int originalWidth = 200;\r\n            int originalHeight = 100;\r\n\r\n            int newWidth = (int) (originalWidth * zoomFactor);\r\n            int newHeight = (int) (originalHeight * zoomFactor);\r\n\r\n            // Obtener la posición actual y recalcular según el zoom\r\n            int currentX = panel.getX();\r\n            int currentY = panel.getY();\r\n\r\n            // Centrar el panel ajustado en la misma posición relativa\r\n            int newX = (int) (currentX * zoomFactor);\r\n            int newY = (int) (currentY * zoomFactor);\r\n\r\n            panel.setBounds(newX, newY, newWidth, newHeight);\r\n        }\r\n        panel1.revalidate(); // Revalidar el layout del panel contenedor\r\n        panel1.repaint();    // Repintar el panel contenedor con los nuevos tamaños\r\n    }\r\n}\r\n\r\n\r\n      /*⢀⣤⣤⣶⠶⠶⣶⣤⣤⡀⠀⠀⠀⠀⠀⠀\r\n⠀⠀⠀⠀⠀⢀⣴⠾⠛⠉⠀⢠⣾⣴⡾⠛⠻⣷⣄⠀⠀⠀⠀⠀\r\n⠀⠀⢶⣶⣶⣿⣁⠀⠀⠀⠀⢸⣿⠏⢀⣤⣶⣌⠻⣦⡀⠀⠀⠀\r\n⠀⠀⣴⡟⠁⢉⣙⣿⣦⡀⠀⢸⡏⣴⠟⢡⣶⣿⣧⡹⣷⡀⠀⠀\r\n⠀⣼⠏⢀⣾⠟⠛⠛⠻⣿⡆⠀⠀⢿⣄⠀⠙⠉⠹⣷⡸⣷⠀⠀\r\n⢠⣿⠀⢸⡿⢿⠇⠀⠀⣾⠇⠀⣀⣈⠻⢷⣤⣤⣤⡾⠃⢹⣇⠀\r\n⢸⣿⠀⢸⣧⣀⣀⣠⣾⢋⣴⢿⣿⡛⠻⣶⣤⣉⠁⠀⠀⠀⣿⠀\r\n⠈⣿⠀⠀⠙⠛⠛⠋⠁⣼⣯⣀⣿⠿⠶⠟⠉⠛⢷⣄⠀⠀⣿⡇\r\n⠀⣿⠀⠀⠀⠀⠀⠀⠀⣿⡏⠉⠁⠀⠀⢀⣴⢶⣄⢻⡇⠀⢸⡇\r\n⠀⢻⣇⠀⠀⠀⠀⠀⢠⡿⢀⣀⢠⣾⠷⣾⣧⡶⠿⠟⠁⠀⣾⡇\r\n⠀⠈⣿⣧⡀⠀⠀⣠⣿⣷⠟⢻⣿⣷⡾⠛⠉⠀⠀⠀⠀⢀⣿⠀\r\n⠀⠀⢹⣿⢻⣦⡀⠉⠛⠛⠛⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀\r\n⠀⠀⠀⠛⠀⠈⠻⠷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Front.java b/src/Front.java
--- a/src/Front.java	(revision a9388eafe7499a0afd194ddb2f85391dc110bd0e)
+++ b/src/Front.java	(date 1719172717359)
@@ -1,6 +1,6 @@
 import Dibujos.PanelPersonalizado;
 import Dibujos.Validador.Validador;
-
+import Dibujos.PanelesMovibles.Decision.DibujoDecisionInterno;
 import javax.swing.*;
 import java.awt.*;
 import java.awt.event.ActionEvent;
Index: src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesMovibles.Decision;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\n\r\npublic class DibujoDecisionFin extends PanelPersonalizado {\r\n\r\n    public DibujoDecisionFin(String texto, List<PanelPersonalizado> lista, JPanel _contenedor,GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente) {\r\n        super(texto, lista, _contenedor,_restriciones,_ventanaEmergente);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n\r\n        int panelWidth = getWidth();\r\n        int panelHeight = getHeight();\r\n\r\n        int centro_x = panelWidth/2;        // Centro horizontal\r\n        int centro_y = panelHeight/2;     // Centro vertical\r\n\r\n        int cuarto = panelWidth/4;\r\n\r\n        // Dibujar las líneas que forman el rombo\r\n        g.setColor(Color.BLACK);\r\n        g.drawLine(cuarto,0,cuarto, centro_y);                // Linea derecha\r\n        g.drawLine(cuarto*3, 0,cuarto*3, centro_y);   // Linea izquierda\r\n        g.drawLine(cuarto, centro_y,cuarto*3, centro_y);     // Linea central\r\n        g.drawLine(centro_x, centro_y,centro_x, panelHeight);    // Linea baja\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java
--- a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java	(revision a9388eafe7499a0afd194ddb2f85391dc110bd0e)
+++ b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionFin.java	(date 1719172717338)
@@ -17,6 +17,8 @@
     @Override
     protected void paintComponent(Graphics g) {
         super.paintComponent(g);
+        Graphics2D g2d = (Graphics2D) g.create();
+        g2d.scale(zoomFactor, zoomFactor);
 
         int panelWidth = getWidth();
         int panelHeight = getHeight();
@@ -27,10 +29,10 @@
         int cuarto = panelWidth/4;
 
         // Dibujar las líneas que forman el rombo
-        g.setColor(Color.BLACK);
-        g.drawLine(cuarto,0,cuarto, centro_y);                // Linea derecha
-        g.drawLine(cuarto*3, 0,cuarto*3, centro_y);   // Linea izquierda
-        g.drawLine(cuarto, centro_y,cuarto*3, centro_y);     // Linea central
-        g.drawLine(centro_x, centro_y,centro_x, panelHeight);    // Linea baja
+        g2d.setColor(Color.BLACK);
+        g2d.drawLine(cuarto,0,cuarto, centro_y);                // Linea derecha
+        g2d.drawLine(cuarto*3, 0,cuarto*3, centro_y);   // Linea izquierda
+        g2d.drawLine(cuarto, centro_y,cuarto*3, centro_y);     // Linea central
+        g2d.drawLine(centro_x, centro_y,centro_x, panelHeight);    // Linea baja
     }
 }
Index: src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesMovibles.Decision;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DibujoDecisionInterno extends JPanel {\r\n\r\n    private final DesicionInterna verdadero;\r\n    private final DesicionInterna falso;\r\n\r\n    public DibujoDecisionInterno()\r\n    {\r\n        setPreferredSize(new Dimension(200, 400));\r\n        this.setLayout(new BoxLayout(DibujoDecisionInterno.this, BoxLayout.X_AXIS));\r\n        this.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\r\n\r\n        this.verdadero = new DesicionInterna();\r\n        this.falso = new DesicionInterna();\r\n\r\n        this.verdadero.setLayout(new BoxLayout(this.verdadero, BoxLayout.Y_AXIS));\r\n        this.verdadero.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\r\n        this.verdadero.add(new DesicionVacia(\"null\",null,null,null,null));\r\n\r\n\r\n        this.falso.setLayout(new BoxLayout(this.falso, BoxLayout.Y_AXIS));\r\n        this.falso.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\r\n        this.falso.add(new DesicionVacia(\"null\",null,null,null,null));\r\n\r\n        this.add(verdadero);\r\n        this.add(falso);\r\n    }\r\n\r\n\r\n    public JPanel getVerdadero() {\r\n        return verdadero;\r\n    }\r\n\r\n    public List<PanelPersonalizado> getListaVerdadera()\r\n    {\r\n        return verdadero.getListaFiguras();\r\n    }\r\n\r\n    public List<PanelPersonalizado> getListaFalsa()\r\n    {\r\n        return falso.getListaFiguras();\r\n    }\r\n\r\n    public JPanel getFalso() {\r\n        return falso;\r\n    }\r\n\r\n    public void ajustarSize()\r\n    {\r\n\r\n        int alturaVer = 0;\r\n        int alturaFal = 0;\r\n\r\n        int anchoVer  = 0;\r\n        int anchoFal  = 0;\r\n\r\n        JPanel panelVer = this.getVerdadero();\r\n        JPanel panelFal = this.getFalso();\r\n\r\n\r\n\r\n        for (JPanel componete: this.getListaVerdadera())\r\n        {\r\n\r\n            alturaVer += (int) componete.getPreferredSize().getHeight();\r\n            anchoVer   = Math.max( anchoVer , (int) componete.getPreferredSize().getWidth() );\r\n\r\n        }\r\n\r\n\r\n        for (JPanel componete: this.getListaFalsa())\r\n        {\r\n\r\n            alturaFal += (int) componete.getPreferredSize().getHeight();\r\n            anchoFal   = Math.max( anchoFal , (int) componete.getPreferredSize().getWidth() );\r\n\r\n        }\r\n\r\n\r\n\r\n        int altura = Math.max(alturaVer, alturaFal);\r\n        int ancho = Math.max(anchoVer,anchoFal);\r\n\r\n        Dimension size = new Dimension(ancho,altura);\r\n\r\n        panelVer.setPreferredSize(size);\r\n        panelFal.setPreferredSize(size);\r\n\r\n        panelVer.revalidate();\r\n        panelFal.revalidate();\r\n\r\n\r\n        Dimension sizeG = new Dimension(ancho * 2 , altura );\r\n\r\n        this.setPreferredSize(sizeG);\r\n        this.revalidate();\r\n    }\r\n\r\n\r\n    public class DesicionInterna extends JPanel {\r\n        private final List<PanelPersonalizado> listaFiguras;\r\n\r\n        DesicionInterna() {\r\n            listaFiguras = new ArrayList<>();\r\n        }\r\n\r\n        @Override\r\n        protected void paintComponent(Graphics g) {\r\n            super.paintComponent(g);\r\n\r\n            g.setColor(Color.BLACK);\r\n\r\n            int ancho = this.getWidth();\r\n            int alto = this.getHeight();\r\n\r\n            g.drawLine(ancho / 2, 0, ancho / 2, alto);\r\n        }\r\n\r\n\r\n\r\n        public List<PanelPersonalizado> getListaFiguras()\r\n        {\r\n            return listaFiguras;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java
--- a/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java	(revision a9388eafe7499a0afd194ddb2f85391dc110bd0e)
+++ b/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java	(date 1719172717345)
@@ -53,6 +53,7 @@
         return falso;
     }
 
+
     public void ajustarSize()
     {
 
Index: src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesMovibles.Decision;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\n\r\npublic class DesicionVacia extends PanelPersonalizado {\r\n\r\n    public DesicionVacia(String _texto, List<PanelPersonalizado> lista, JPanel _contenedor,GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente) {\r\n        super(_texto, lista, _contenedor,_restriciones,_ventanaEmergente);\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n\r\n        g.setColor(Color.BLACK);\r\n\r\n        int ancho = this.getWidth();\r\n        int alto = this.getHeight();\r\n\r\n        g.drawLine(ancho/2,0,ancho/2,alto);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java b/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java
--- a/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java	(revision a9388eafe7499a0afd194ddb2f85391dc110bd0e)
+++ b/src/Dibujos/PanelesMovibles/Decision/DesicionVacia.java	(date 1719172717352)
@@ -16,12 +16,14 @@
     @Override
     protected void paintComponent(Graphics g) {
         super.paintComponent(g);
+        Graphics2D g2d = (Graphics2D) g.create();
+        g2d.scale(zoomFactor, zoomFactor);
 
-        g.setColor(Color.BLACK);
+        g2d.setColor(Color.BLACK);
 
         int ancho = this.getWidth();
         int alto = this.getHeight();
 
-        g.drawLine(ancho/2,0,ancho/2,alto);
+        g2d.drawLine(ancho/2,0,ancho/2,alto);
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f2c63d2c-f798-4ff1-b245-2fede493910c\" name=\"Changes\" comment=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Dibujos/PanelPersonalizado.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Dibujos/PanelPersonalizado.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodyActiveAccount\">\r\n    <option name=\"activeAccountId\" value=\"VXNlcjozODM1ODI=\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"master\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"Edgar\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n    &quot;associatedIndex&quot;: 4\r\n    }</component>\r\n  <component name=\"ProjectId\" id=\"2dirlefD5DxljA0N9gwNVNUnaIU\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW&quot;: &quot;true&quot;,\r\n    &quot;UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH&quot;: &quot;227&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;ramafeliz2&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\edgar\\OneDrive\\Desktop\\Proyecto de programacion\\Proyecto-Diagrama-de-Flujo\\Diagrama de Flujo\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"Dibujos.PanelesMovibles\" />\r\n      <recent name=\"LogicaFiguras\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"GraficadorInteractivo\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f2c63d2c-f798-4ff1-b245-2fede493910c\" name=\"Changes\" comment=\"\" />\r\n      <created>1710501892453</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710501892453</updated>\r\n      <workItem from=\"1710501893482\" duration=\"19000\" />\r\n      <workItem from=\"1710501928960\" duration=\"597000\" />\r\n      <workItem from=\"1710502572541\" duration=\"8000\" />\r\n      <workItem from=\"1710502599781\" duration=\"108000\" />\r\n      <workItem from=\"1710502736836\" duration=\"725000\" />\r\n      <workItem from=\"1710503498694\" duration=\"18000\" />\r\n      <workItem from=\"1710503524960\" duration=\"42000\" />\r\n      <workItem from=\"1710503594128\" duration=\"922000\" />\r\n      <workItem from=\"1710509865136\" duration=\"522000\" />\r\n      <workItem from=\"1710550122912\" duration=\"2272000\" />\r\n      <workItem from=\"1710552608494\" duration=\"225000\" />\r\n      <workItem from=\"1710554332915\" duration=\"973000\" />\r\n      <workItem from=\"1710584677830\" duration=\"77000\" />\r\n      <workItem from=\"1710585350962\" duration=\"1285000\" />\r\n      <workItem from=\"1710586782759\" duration=\"267000\" />\r\n      <workItem from=\"1710587073308\" duration=\"165000\" />\r\n      <workItem from=\"1710587255476\" duration=\"87000\" />\r\n      <workItem from=\"1710587474880\" duration=\"1187000\" />\r\n      <workItem from=\"1710589963917\" duration=\"675000\" />\r\n      <workItem from=\"1710621523871\" duration=\"146000\" />\r\n      <workItem from=\"1710699958883\" duration=\"12982000\" />\r\n      <workItem from=\"1710720795353\" duration=\"53000\" />\r\n      <workItem from=\"1710787900013\" duration=\"84000\" />\r\n      <workItem from=\"1710788001213\" duration=\"110000\" />\r\n      <workItem from=\"1710788179290\" duration=\"1559000\" />\r\n      <workItem from=\"1710807091208\" duration=\"71000\" />\r\n      <workItem from=\"1711036718560\" duration=\"689000\" />\r\n      <workItem from=\"1711056144708\" duration=\"2118000\" />\r\n      <workItem from=\"1711069031272\" duration=\"202000\" />\r\n      <workItem from=\"1711204161415\" duration=\"3993000\" />\r\n      <workItem from=\"1711941059588\" duration=\"727000\" />\r\n      <workItem from=\"1712364788791\" duration=\"3062000\" />\r\n      <workItem from=\"1712415021566\" duration=\"789000\" />\r\n      <workItem from=\"1712431091306\" duration=\"5510000\" />\r\n      <workItem from=\"1712500818533\" duration=\"28960000\" />\r\n      <workItem from=\"1712579678706\" duration=\"1043000\" />\r\n      <workItem from=\"1712581071997\" duration=\"372000\" />\r\n      <workItem from=\"1712597557775\" duration=\"1778000\" />\r\n      <workItem from=\"1712796861319\" duration=\"12579000\" />\r\n      <workItem from=\"1713146491385\" duration=\"420000\" />\r\n      <workItem from=\"1713146941087\" duration=\"218000\" />\r\n      <workItem from=\"1713147237113\" duration=\"43000\" />\r\n      <workItem from=\"1713147364454\" duration=\"123000\" />\r\n      <workItem from=\"1714533075828\" duration=\"492000\" />\r\n      <workItem from=\"1715208009576\" duration=\"62000\" />\r\n      <workItem from=\"1715556573296\" duration=\"3817000\" />\r\n      <workItem from=\"1715615290791\" duration=\"9503000\" />\r\n      <workItem from=\"1717203469550\" duration=\"5000\" />\r\n      <workItem from=\"1717357044709\" duration=\"3034000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Intercambio de figuras parcial\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580312170</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580312170</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1718771398687</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718771398687</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"Edgar\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Intercambio de figuras parcial\" />\r\n    <MESSAGE value=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java</url>\r\n          <line>94</line>\r\n          <option name=\"timeStamp\" value=\"12\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDecision.java</url>\r\n          <line>70</line>\r\n          <properties class=\"Dibujos.PanelesMovibles.DibujoDecision\" method=\"ajustarSize\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"11\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"componete\" />\r\n        <watch expression=\"componete\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a9388eafe7499a0afd194ddb2f85391dc110bd0e)
+++ b/.idea/workspace.xml	(date 1719172717366)
@@ -106,6 +106,7 @@
         <item itemvalue="Application.Main" />
         <item itemvalue="Application.Main" />
         <item itemvalue="Application.Main" />
+        <item itemvalue="Application.Main" />
       </list>
     </recent_temporary>
   </component>
