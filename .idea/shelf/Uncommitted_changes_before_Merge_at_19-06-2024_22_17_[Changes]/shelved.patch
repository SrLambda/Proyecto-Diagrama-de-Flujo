Index: src/Dibujos/PanelPersonalizado.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport Dibujos.Validador.Validador;\r\nimport Dibujos.Validador.ValidadorCadena;\r\nimport Dibujos.Validador.ValidadorDouble;\r\nimport Dibujos.Validador.ValidadorEntero;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\npublic abstract class PanelPersonalizado extends JPanel\r\n{\r\n\r\n    public String texto;\r\n    protected List <PanelPersonalizado> listaFiguras;\r\n    protected int posOriginal = -1;\r\n    protected JPanel contenedor;\r\n    public boolean habilitado = true;\r\n    protected int posicion = -1;\r\n    protected VentanaEmergente ventanaEmergente;\r\n\r\n    protected int[] anchoAlto;\r\n\r\n    protected static Font textoFont;\r\n    protected static Float zoom;\r\n\r\n\r\n    protected Validador validarEntero;\r\n    protected Validador validarDouble;\r\n    protected Validador validarCadena;\r\n    protected GridBagConstraints restriciones;\r\n    protected List <String> variables;\r\n    protected Map<String, Object> variables2;\r\n\r\n    public double zoomFactor = 1.0;\r\n\r\n    public PanelPersonalizado(String _texto, List <PanelPersonalizado> lista, JPanel _contenedor, GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente)\r\n    {\r\n        this.texto = _texto;\r\n        this.listaFiguras = lista;\r\n        this.contenedor = _contenedor;\r\n        this.ventanaEmergente = _ventanaEmergente;\r\n        this.restriciones = _restriciones;\r\n        this.validarEntero = new ValidadorEntero();\r\n        this.validarDouble = new ValidadorDouble();\r\n        this.validarCadena = new ValidadorCadena();\r\n        this.variables = new ArrayList<>();\r\n        setPreferredSize(new Dimension(750, 200));\r\n\r\n        if (null == zoom){\r\n            zoom = 1.0f;\r\n        }\r\n\r\n        try {\r\n            InputStream is = PanelPersonalizado.class.getResourceAsStream(\"/fonts/GohuFont14NerdFontMono-Regular.ttf\");\r\n            assert is != null;\r\n            textoFont = Font.createFont(Font.TRUETYPE_FONT, is).deriveFont(14f);\r\n        }\r\n        catch (IOException | FontFormatException e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n\r\n        this.anchoAlto = this.getAnchoAlto();\r\n\r\n        setPreferredSize(new Dimension(200, 100));\r\n\r\n    }\r\n\r\n    public int colisiones()\r\n    {\r\n        int i=0;\r\n        int num = listaFiguras.indexOf(this);\r\n\r\n\r\n        while(i < listaFiguras.size())\r\n        {\r\n            PanelPersonalizado panelColision = listaFiguras.get(i);\r\n\r\n            if(panelColision != this)\r\n            {\r\n                int ejeY = this.getY();\r\n                int altura = this.getHeight();\r\n                int ejeYSiguiente = panelColision.getY();\r\n                int alturaSiguiente = panelColision.getHeight();\r\n\r\n                if ((ejeY+altura) > ejeYSiguiente && (ejeY+altura) < (ejeYSiguiente + alturaSiguiente))\r\n                {\r\n\r\n                    if(listaFiguras.get(num+1).habilitado)\r\n                    {\r\n\r\n                        this.posicion = num;\r\n                        return i;\r\n\r\n                    }\r\n\r\n                }\r\n                else\r\n\r\n                {\r\n                    if(ejeY < (ejeYSiguiente+alturaSiguiente) && ejeY > ejeYSiguiente)\r\n                    {\r\n\r\n                        if(listaFiguras.get(num-1).habilitado)\r\n                        {\r\n\r\n                            this.posicion = num;\r\n                            return i;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            i++;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public void cambiarTexto(String nuevoTexto)\r\n    {\r\n\r\n        this.texto = nuevoTexto;\r\n        repaint();// Redibujar la figura con el nuevo texto\r\n        revalidate();\r\n\r\n    }\r\n\r\n    public void setZoomFactor(double zoomFactor) {\r\n        this.zoomFactor = zoomFactor;\r\n        revalidate(); // Revalidar el layout\r\n        repaint();   // Repintar el panel con el nuevo zoom\r\n    }\r\n\r\n    //para los paneles de las figuras\r\n    @Override\r\n    public Dimension getPreferredSize() {\r\n        // Obtener el tamaño original del panel y aplicarle el factor de zoom\r\n        int originalWidth = 200;  // Ancho original del panel\r\n        int originalHeight = 100; // Alto original del panel\r\n        return new Dimension((int) (originalWidth * zoomFactor *2), (int) (originalHeight * zoomFactor));\r\n    }\r\n\r\n    // Método para eliminar la figura y reorganizar las posiciones\r\n    public void eliminarFigura() {\r\n\r\n        // Obtener el índice de esta figura en la lista\r\n        int indice = listaFiguras.indexOf(this);\r\n\r\n        if (indice != -1)\r\n        {\r\n            // Eliminar esta figura del panel principal\r\n            Container parent = getParent();\r\n            if (parent instanceof JPanel)\r\n            {\r\n                ((JPanel) parent).remove(this);\r\n            }\r\n\r\n            // Eliminar esta figura de la lista de figuras\r\n            listaFiguras.remove(indice);\r\n\r\n            // Reorganizar las posiciones visuales de las figuras restantes en el panel principal\r\n            for (int i = indice; i < listaFiguras.size(); i++)\r\n            {\r\n                PanelPersonalizado panel = listaFiguras.get(i);\r\n                panel.setLocation(0, i * panel.getHeight());\r\n            }\r\n\r\n            parent.repaint();\r\n            ventanaEmergente.actualizarCompnentes();\r\n        }\r\n    }\r\n\r\n    public String getTexto() {\r\n        return texto;\r\n    }\r\n\r\n    public void actualizarContenedor(List<PanelPersonalizado> list,JPanel cont)\r\n    {\r\n        this.listaFiguras = list;\r\n        this.contenedor = cont;\r\n    }\r\n\r\n    public String validar(boolean evidencia, String opcion, String entrada){\r\n        while(true){\r\n            if(evidencia){\r\n                return entrada;\r\n            }else{\r\n                this.texto = entrada;\r\n                entrada = JOptionPane.showInputDialog(null, \"Variable invalida\", this.texto);\r\n                this.texto = entrada;\r\n                if(opcion.equals(\"Cadena\")){\r\n                    evidencia = validarCadena.validar(entrada);\r\n                } else if (opcion.equals(\"Entero\")){\r\n                    evidencia = validarEntero.validar(entrada);\r\n                } else if (opcion.equals(\"Double\")){\r\n                    evidencia = validarDouble.validar(entrada);\r\n                }\r\n                if(evidencia){\r\n                    return entrada;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private int[] getAnchoAlto(){\r\n\r\n        JLabel tempLabel = new JLabel();\r\n        FontMetrics metrics = tempLabel.getFontMetrics(this.textoFont);\r\n\r\n        int width  = metrics.stringWidth(this.texto);\r\n        int height = metrics.getHeight();\r\n\r\n        if(width < 105) //  ANCHO DE LA CADENA 'WWWWW'\r\n        {\r\n\r\n            width = 105;\r\n\r\n        }\r\n\r\n        int[] valores = new int[2];\r\n\r\n        valores[0] = width;\r\n        valores[1] = height;\r\n\r\n        return valores;\r\n    }\r\n\r\n}\r\n\r\n/*\r\n\r\n⠀⠀⠀⠀⣠⣶⡾⠏⠉⠙⠳⢦⡀⠀⠀⠀⢠⠞⠉⠉⠉⠉⠉⠉⠙⠲⡀⠀\r\n⠀⠀⠀⣴⠿⠏⠀⠀⠀⠀⠀⠀⢳⡀⠀⡏⠀⠀⠀⠀         ⠀⢷\r\n⠀⠀⢠⣟⣋⡀⢀⣀⣀⡀⠀⣀⡀⣧⠀⢸⠀⠀⠀⠀⠀        ⡇\r\n⠀⠀⢸⣯⡭⠁⠸⣛⣟⠆⡴⣻⡲⣿⠀⣸⠀⠀AMA ESTOY  ⡇\r\n⠀⠀⣟⣿⡭⠀⠀⠀⠀⠀⢱⠀⠀⣿⠀⢹⠀⠀⠀  TRISTE   ⡇\r\n⠀⠀⠙⢿⣯⠄⠀⠀⠀⢀⡀⠀⠀⡿⠀⠀⡇⠀⠀⠀        ⠀⡼\r\n⠀⠀⠀⠀⠹⣶⠆⠀⠀⠀⠀⠀⡴⠃⠀⠀⠘⠤⣄⣀⣀⣀⣀⣀⣀⣠⠞⠀\r\n⠀⠀⠀⠀⠀⢸⣷⡦⢤⡤⢤⣞⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n⠀⠀⢀⣤⣴⣿⣏⠁⠀⠀⠸⣏⢯⣷⣖⣦⡀⠀⠀⠀⠀⠀⠀\r\n⢀⣾⣽⣿⣿⣿⣿⠛⢲⣶⣾⢉⡷⣿⣿⠵⣿⠀⠀⠀⠀⠀⠀\r\n⣼⣿⠍⠉⣿⡭⠉⠙⢺⣇⣼⡏⠀⠀⠀⣄⢸⠀⠀⠀⠀⠀⠀\r\n⣿⣿⣧⣀⣿………⣀⣰⣏⣘⣆⣀⠀⠀\r\n\r\n */\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelPersonalizado.java b/src/Dibujos/PanelPersonalizado.java
--- a/src/Dibujos/PanelPersonalizado.java	(revision fde9b15484e42bca59c9e7f203a2ba16f8005a98)
+++ b/src/Dibujos/PanelPersonalizado.java	(date 1718849820260)
@@ -27,7 +27,8 @@
 
     protected static Font textoFont;
     protected static Float zoom;
-
+    protected Integer witdh;
+    protected Integer height;
 
     protected Validador validarEntero;
     protected Validador validarDouble;
@@ -147,7 +148,7 @@
         // Obtener el tamaño original del panel y aplicarle el factor de zoom
         int originalWidth = 200;  // Ancho original del panel
         int originalHeight = 100; // Alto original del panel
-        return new Dimension((int) (originalWidth * zoomFactor *2), (int) (originalHeight * zoomFactor));
+        return new Dimension((int) (originalWidth * zoomFactor * 4), (int) (originalHeight * zoomFactor));
     }
 
     // Método para eliminar la figura y reorganizar las posiciones
Index: src/Dibujos/PanelesNoMovibles/DibujoInicio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesNoMovibles;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.geom.QuadCurve2D;\r\nimport java.util.List;\r\n\r\npublic class DibujoInicio extends PanelPersonalizado {\r\n    public DibujoInicio(String texto, List<PanelPersonalizado> lista, JPanel _contenedor, GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente) {\r\n        super(texto, lista, _contenedor,_restriciones,_ventanaEmergente);\r\n        this.habilitado = false;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n\r\n        super.paintComponent(g);\r\n        Graphics2D g2d = (Graphics2D) g.create();\r\n        g2d.scale(zoomFactor, zoomFactor);\r\n\r\n        int widthTx  = this.anchoAlto[0];\r\n        int heightTx = this.anchoAlto[1];\r\n\r\n        int centro_x = this.getWidth()  / 2;\r\n        int centro_y = this.getHeight() / 2;\r\n\r\n\r\n\r\n        // Coordenadas del rectángulo\r\n        int x1 = centro_x - ( ( widthTx  / 2 ) + 10); // Coordenada x del lado izquierdo del rectángulo\r\n        int x2 = centro_x + ( ( widthTx  / 2 ) + 10); // Coordenada x del lado derecho del rectángulo\r\n        int y1 = centro_y - ( ( heightTx / 2 ) + 10); // Coordenada y del lado superior del rectángulo\r\n        int y2 = centro_y + ( ( heightTx / 2 ) + 10); // Coordenada y del lado inferior del rectángulo\r\n\r\n        // Radio de los bordes redondeados\r\n        double rx = ( ( heightTx / 2 ) + 10) * Math.cos(Math.PI/4);\r\n\r\n        g2d.setColor(Color.BLACK);\r\n\r\n        //Dibujar figura de entrada\r\n\r\n        g2d.drawLine(x1, y1, x2, y1);     // Lado superior\r\n        g2d.drawLine(x2, y2, x1, y2);     // Lado inferior\r\n\r\n\r\n        // Radio = ( ( heightTx / 2 ) + 10)\r\n        g2d.setColor(Color.BLACK);\r\n        g2d.setStroke(new BasicStroke(1));\r\n        // Grosor de línea\r\n        g2d.draw(new QuadCurve2D.Double(x1, y1, x1-rx , centro_y-rx , x1 - ( ( heightTx / 2 ) + 10), centro_y));\r\n        g2d.draw(new QuadCurve2D.Double(x1 - ( ( heightTx / 2 ) + 10), centro_y, x1-rx , centro_y+rx ,x1  ,y2 ));\r\n\r\n        g2d.draw(new QuadCurve2D.Double(x2, y1, x2+rx , centro_y-rx , x2 + ( ( heightTx / 2 ) + 10), centro_y));\r\n        g2d.draw(new QuadCurve2D.Double(x2 + ( ( heightTx / 2 ) + 10), centro_y, x2+rx , centro_y+rx ,x2  ,y2 ));\r\n\r\n        // Dibujar flujo\r\n        g2d.drawLine(centro_x, y2, centro_x, getHeight());         // Linea inferior\r\n\r\n        // fuente con el tamaño especificado\r\n        g2d.setFont(textoFont);\r\n        \r\n        // Dibujar el texto centrado\r\n        FontMetrics metrics = g.getFontMetrics();\r\n        int x = (getWidth() - metrics.stringWidth(texto)) / 2;\r\n        int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();\r\n        g2d.drawString(texto, x, y);\r\n\r\n        g2d.dispose();\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesNoMovibles/DibujoInicio.java b/src/Dibujos/PanelesNoMovibles/DibujoInicio.java
--- a/src/Dibujos/PanelesNoMovibles/DibujoInicio.java	(revision fde9b15484e42bca59c9e7f203a2ba16f8005a98)
+++ b/src/Dibujos/PanelesNoMovibles/DibujoInicio.java	(date 1718849820263)
@@ -63,7 +63,7 @@
         g2d.setFont(textoFont);
         
         // Dibujar el texto centrado
-        FontMetrics metrics = g.getFontMetrics();
+        FontMetrics metrics = g2d.getFontMetrics();
         int x = (getWidth() - metrics.stringWidth(texto)) / 2;
         int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();
         g2d.drawString(texto, x, y);
Index: src/Dibujos/PanelesNoMovibles/DibujoFin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesNoMovibles;\r\n\r\nimport Dibujos.PanelPersonalizado;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.geom.QuadCurve2D;\r\nimport java.util.List;\r\n\r\npublic class DibujoFin extends PanelPersonalizado {\r\n\r\n    public DibujoFin(String texto, List<PanelPersonalizado> lista, JPanel _contenedor, GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente) {\r\n        super(texto, lista, _contenedor,_restriciones,_ventanaEmergente);\r\n        this.habilitado = false;\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n\r\n        super.paintComponent(g);\r\n        Graphics2D g2d = (Graphics2D) g.create();\r\n        g2d.scale(zoomFactor, zoomFactor);\r\n\r\n        int widthTx  = this.anchoAlto[0];\r\n        int heightTx = this.anchoAlto[1];\r\n\r\n        int centro_x = this.getWidth()  / 2;\r\n        int centro_y = this.getHeight() / 2;\r\n\r\n        // Coordenadas del rectángulo\r\n        int x1 = centro_x - ( ( widthTx  / 2 ) + 10); // Coordenada x del lado izquierdo del rectángulo\r\n        int x2 = centro_x + ( ( widthTx  / 2 ) + 10); // Coordenada x del lado derecho del rectángulo\r\n        int y1 = centro_y - ( ( heightTx / 2 ) + 10); // Coordenada y del lado superior del rectángulo\r\n        int y2 = centro_y + ( ( heightTx / 2 ) + 10); // Coordenada y del lado inferior del rectángulo\r\n\r\n        // Radio de los bordes redondeados\r\n        double rx = ( ( heightTx / 2 ) + 10) * Math.cos(Math.PI/4);\r\n\r\n        g2d.setColor(Color.BLACK);\r\n\r\n        //Dibujar figura de entrada\r\n\r\n        g2d.drawLine(x1, y1, x2, y1);     // Lado superior\r\n        g2d.drawLine(x2, y2, x1, y2);     // Lado inferior\r\n\r\n\r\n        // Radio = ( ( heightTx / 2 ) + 10)\r\n        g2d.setColor(Color.BLACK);\r\n        g2d.setStroke(new BasicStroke(1));\r\n        // Grosor de línea\r\n        g2d.draw(new QuadCurve2D.Double(x1, y1, x1-rx , centro_y-rx , x1 - ( ( heightTx / 2 ) + 10), centro_y));\r\n        g2d.draw(new QuadCurve2D.Double(x1 - ( ( heightTx / 2 ) + 10), centro_y, x1-rx , centro_y+rx ,x1  ,y2 ));\r\n\r\n        g2d.draw(new QuadCurve2D.Double(x2, y1, x2+rx , centro_y-rx , x2 + ( ( heightTx / 2 ) + 10), centro_y));\r\n        g2d.draw(new QuadCurve2D.Double(x2 + ( ( heightTx / 2 ) + 10), centro_y, x2+rx , centro_y+rx ,x2  ,y2 ));\r\n\r\n        // Dibujar flujo\r\n        g2d.setColor(Color.BLACK);\r\n        g2d.drawLine(centro_x, 0, centro_x, y1);               // Linea superior\r\n\r\n        g2d.drawLine(centro_x, y1, centro_x + 10, y1 - 10);    //  Flecha\r\n        g2d.drawLine(centro_x, y1, centro_x - 10, y1 - 10);    //  de flujo\r\n\r\n        // fuente con el tamaño especificado\r\n        g2d.setFont(textoFont);\r\n\r\n        // Dibujar el texto centrado\r\n        FontMetrics metrics = g.getFontMetrics();\r\n        int x = (getWidth() - metrics.stringWidth(texto)) / 2;\r\n        int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();\r\n        g2d.drawString(texto, x, y);\r\n\r\n        g2d.dispose();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesNoMovibles/DibujoFin.java b/src/Dibujos/PanelesNoMovibles/DibujoFin.java
--- a/src/Dibujos/PanelesNoMovibles/DibujoFin.java	(revision fde9b15484e42bca59c9e7f203a2ba16f8005a98)
+++ b/src/Dibujos/PanelesNoMovibles/DibujoFin.java	(date 1718849820262)
@@ -66,7 +66,7 @@
         g2d.setFont(textoFont);
 
         // Dibujar el texto centrado
-        FontMetrics metrics = g.getFontMetrics();
+        FontMetrics metrics = g2d.getFontMetrics();
         int x = (getWidth() - metrics.stringWidth(texto)) / 2;
         int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();
         g2d.drawString(texto, x, y);
Index: src/Dibujos/PanelesMovibles/DibujoProceso.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Dibujos.PanelesMovibles;\r\nimport Dibujos.PanelMovible;\r\nimport Dibujos.PanelPersonalizado;\r\nimport Dibujos.Ventana.VentanaEmergente;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.List;\r\n\r\npublic class DibujoProceso extends PanelMovible {\r\n    private int ultimoEjeY;\r\n    private boolean moviendo;\r\n    private int ejeYMouse;\r\n    public DibujoProceso(String texto, List <PanelPersonalizado> lista, JPanel _contenedor,GridBagConstraints _restriciones, VentanaEmergente _ventanaEmergente) {\r\n        super(texto, lista, _contenedor,_restriciones,_ventanaEmergente);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n\r\n        super.paintComponent(g);\r\n\r\n\r\n\r\n\r\n        int widthTx  = this.anchoAlto[0];\r\n        int heightTx = this.anchoAlto[1];\r\n\r\n        int centro_x = this.getWidth()  / 2;\r\n        int centro_y = this.getHeight() / 2;\r\n\r\n\r\n\r\n        // Coordenadas del rectángulo\r\n        int x1 = centro_x - ( ( widthTx  / 2 ) + 10); // Coordenada x del lado izquierdo del rectángulo\r\n        int x2 = centro_x + ( ( widthTx  / 2 ) + 10); // Coordenada x del lado derecho del rectángulo\r\n        int y1 = centro_y - ( ( heightTx / 2 ) + 10); // Coordenada y del lado superior del rectángulo\r\n        int y2 = centro_y + ( ( heightTx / 2 ) + 10); // Coordenada y del lado inferior del rectángulo\r\n\r\n\r\n\r\n        // Dibujar las líneas que forman el rectángulo\r\n        g.setColor(Color.BLACK);\r\n        g.drawLine(x1, y1, x2, y1);     // Lado superior\r\n        g.drawLine(x2, y1, x2, y2);     // Lado derecho\r\n        g.drawLine(x2, y2, x1, y2);     // Lado inferior\r\n        g.drawLine(x1, y2, x1, y1);     // Lado izquierdo\r\n\r\n        // Dibujar flujo\r\n        g.setColor(Color.BLACK);\r\n        g.drawLine(centro_x,0,centro_x,y1);            // Linea superior\r\n        g.drawLine(centro_x,y2,centro_x,getHeight());     // Linea inferior\r\n        g.drawLine(centro_x,y1,centro_x+10,y1-10);\r\n        g.drawLine(centro_x,y1,centro_x-10,y1-10);\r\n\r\n\r\n        // fuente con el tamaño especificado\r\n        g.setFont(textoFont);\r\n\r\n        // Dibuja el texto en el centro del panel\r\n        FontMetrics metrics = g.getFontMetrics();\r\n        int x = (getWidth() - metrics.stringWidth(texto)) / 2;\r\n        int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();\r\n        g.drawString(texto, x, y);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Dibujos/PanelesMovibles/DibujoProceso.java b/src/Dibujos/PanelesMovibles/DibujoProceso.java
--- a/src/Dibujos/PanelesMovibles/DibujoProceso.java	(revision fde9b15484e42bca59c9e7f203a2ba16f8005a98)
+++ b/src/Dibujos/PanelesMovibles/DibujoProceso.java	(date 1718849820261)
@@ -20,9 +20,8 @@
     protected void paintComponent(Graphics g) {
 
         super.paintComponent(g);
-
-
-
+        Graphics2D g2d = (Graphics2D) g.create();
+        g2d.scale(zoomFactor, zoomFactor);
 
         int widthTx  = this.anchoAlto[0];
         int heightTx = this.anchoAlto[1];
@@ -30,8 +29,6 @@
         int centro_x = this.getWidth()  / 2;
         int centro_y = this.getHeight() / 2;
 
-
-
         // Coordenadas del rectángulo
         int x1 = centro_x - ( ( widthTx  / 2 ) + 10); // Coordenada x del lado izquierdo del rectángulo
         int x2 = centro_x + ( ( widthTx  / 2 ) + 10); // Coordenada x del lado derecho del rectángulo
@@ -39,30 +36,29 @@
         int y2 = centro_y + ( ( heightTx / 2 ) + 10); // Coordenada y del lado inferior del rectángulo
 
 
-
         // Dibujar las líneas que forman el rectángulo
-        g.setColor(Color.BLACK);
-        g.drawLine(x1, y1, x2, y1);     // Lado superior
-        g.drawLine(x2, y1, x2, y2);     // Lado derecho
-        g.drawLine(x2, y2, x1, y2);     // Lado inferior
-        g.drawLine(x1, y2, x1, y1);     // Lado izquierdo
+        g2d.setColor(Color.BLACK);
+        g2d.drawLine(x1, y1, x2, y1);     // Lado superior
+        g2d.drawLine(x2, y1, x2, y2);     // Lado derecho
+        g2d.drawLine(x2, y2, x1, y2);     // Lado inferior
+        g2d.drawLine(x1, y2, x1, y1);     // Lado izquierdo
 
         // Dibujar flujo
-        g.setColor(Color.BLACK);
-        g.drawLine(centro_x,0,centro_x,y1);            // Linea superior
-        g.drawLine(centro_x,y2,centro_x,getHeight());     // Linea inferior
-        g.drawLine(centro_x,y1,centro_x+10,y1-10);
-        g.drawLine(centro_x,y1,centro_x-10,y1-10);
+        g2d.setColor(Color.BLACK);
+        g2d.drawLine(centro_x,0,centro_x,y1);            // Linea superior
+        g2d.drawLine(centro_x,y2,centro_x,getHeight());     // Linea inferior
+        g2d.drawLine(centro_x,y1,centro_x+10,y1-10);
+        g2d.drawLine(centro_x,y1,centro_x-10,y1-10);
 
 
         // fuente con el tamaño especificado
-        g.setFont(textoFont);
+        g2d.setFont(textoFont);
 
         // Dibuja el texto en el centro del panel
-        FontMetrics metrics = g.getFontMetrics();
+        FontMetrics metrics = g2d.getFontMetrics();
         int x = (getWidth() - metrics.stringWidth(texto)) / 2;
         int y = ((getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();
-        g.drawString(texto, x, y);
+        g2d.drawString(texto, x, y);
 
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f2c63d2c-f798-4ff1-b245-2fede493910c\" name=\"Changes\" comment=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Dibujos/PanelPersonalizado.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Dibujos/PanelPersonalizado.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Front.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Front.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Parseador.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Parseador.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodyActiveAccount\">\r\n    <option name=\"activeAccountId\" value=\"VXNlcjozODM1ODI=\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <excluded-from-favorite>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"master\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </excluded-from-favorite>\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"Edgar\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"testing\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n    &quot;associatedIndex&quot;: 4\r\n    }</component>\r\n  <component name=\"ProjectId\" id=\"2dirlefD5DxljA0N9gwNVNUnaIU\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW\": \"true\",\r\n    \"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH\": \"227\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"ramafeliz2\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\edgar\\OneDrive\\Desktop\\Proyecto de programacion\\Proyecto-Diagrama-de-Flujo\\Diagrama de Flujo\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"Dibujos.PanelesMovibles\" />\r\n      <recent name=\"LogicaFiguras\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"GraficadorInteractivo\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f2c63d2c-f798-4ff1-b245-2fede493910c\" name=\"Changes\" comment=\"\" />\r\n      <created>1710501892453</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710501892453</updated>\r\n      <workItem from=\"1710501893482\" duration=\"19000\" />\r\n      <workItem from=\"1710501928960\" duration=\"597000\" />\r\n      <workItem from=\"1710502572541\" duration=\"8000\" />\r\n      <workItem from=\"1710502599781\" duration=\"108000\" />\r\n      <workItem from=\"1710502736836\" duration=\"725000\" />\r\n      <workItem from=\"1710503498694\" duration=\"18000\" />\r\n      <workItem from=\"1710503524960\" duration=\"42000\" />\r\n      <workItem from=\"1710503594128\" duration=\"922000\" />\r\n      <workItem from=\"1710509865136\" duration=\"522000\" />\r\n      <workItem from=\"1710550122912\" duration=\"2272000\" />\r\n      <workItem from=\"1710552608494\" duration=\"225000\" />\r\n      <workItem from=\"1710554332915\" duration=\"973000\" />\r\n      <workItem from=\"1710584677830\" duration=\"77000\" />\r\n      <workItem from=\"1710585350962\" duration=\"1285000\" />\r\n      <workItem from=\"1710586782759\" duration=\"267000\" />\r\n      <workItem from=\"1710587073308\" duration=\"165000\" />\r\n      <workItem from=\"1710587255476\" duration=\"87000\" />\r\n      <workItem from=\"1710587474880\" duration=\"1187000\" />\r\n      <workItem from=\"1710589963917\" duration=\"675000\" />\r\n      <workItem from=\"1710621523871\" duration=\"146000\" />\r\n      <workItem from=\"1710699958883\" duration=\"12982000\" />\r\n      <workItem from=\"1710720795353\" duration=\"53000\" />\r\n      <workItem from=\"1710787900013\" duration=\"84000\" />\r\n      <workItem from=\"1710788001213\" duration=\"110000\" />\r\n      <workItem from=\"1710788179290\" duration=\"1559000\" />\r\n      <workItem from=\"1710807091208\" duration=\"71000\" />\r\n      <workItem from=\"1711036718560\" duration=\"689000\" />\r\n      <workItem from=\"1711056144708\" duration=\"2118000\" />\r\n      <workItem from=\"1711069031272\" duration=\"202000\" />\r\n      <workItem from=\"1711204161415\" duration=\"3993000\" />\r\n      <workItem from=\"1711941059588\" duration=\"727000\" />\r\n      <workItem from=\"1712364788791\" duration=\"3062000\" />\r\n      <workItem from=\"1712415021566\" duration=\"789000\" />\r\n      <workItem from=\"1712431091306\" duration=\"5510000\" />\r\n      <workItem from=\"1712500818533\" duration=\"28960000\" />\r\n      <workItem from=\"1712579678706\" duration=\"1043000\" />\r\n      <workItem from=\"1712581071997\" duration=\"372000\" />\r\n      <workItem from=\"1712597557775\" duration=\"1778000\" />\r\n      <workItem from=\"1712796861319\" duration=\"12579000\" />\r\n      <workItem from=\"1713146491385\" duration=\"420000\" />\r\n      <workItem from=\"1713146941087\" duration=\"218000\" />\r\n      <workItem from=\"1713147237113\" duration=\"43000\" />\r\n      <workItem from=\"1713147364454\" duration=\"123000\" />\r\n      <workItem from=\"1714533075828\" duration=\"492000\" />\r\n      <workItem from=\"1715208009576\" duration=\"62000\" />\r\n      <workItem from=\"1715556573296\" duration=\"3817000\" />\r\n      <workItem from=\"1715615290791\" duration=\"9503000\" />\r\n      <workItem from=\"1717203469550\" duration=\"5000\" />\r\n      <workItem from=\"1717357044709\" duration=\"3034000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Intercambio de figuras parcial\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712580312170</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712580312170</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1718771398687</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718771398687</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"Edgar\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Intercambio de figuras parcial\" />\r\n    <MESSAGE value=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/Dibujos/PanelesMovibles/Decision/DibujoDecisionInterno.java</url>\r\n          <line>94</line>\r\n          <option name=\"timeStamp\" value=\"12\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoDecision.java</url>\r\n          <line>70</line>\r\n          <properties class=\"Dibujos.PanelesMovibles.DibujoDecision\" method=\"ajustarSize\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"11\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"componete\" />\r\n        <watch expression=\"componete\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fde9b15484e42bca59c9e7f203a2ba16f8005a98)
+++ b/.idea/workspace.xml	(date 1718849820259)
@@ -4,11 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f2c63d2c-f798-4ff1-b245-2fede493910c" name="Changes" comment="Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)">
+    <list default="true" id="f2c63d2c-f798-4ff1-b245-2fede493910c" name="Changes" comment="Arreglo de los ZOOMSSSS, &#10;ahora el panel que contiene a las figuras también crece/disminuye con los zooms">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelPersonalizado.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelPersonalizado.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Front.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Front.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Parseador.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Parseador.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoProceso.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesMovibles/DibujoProceso.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoFin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoFin.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoInicio.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Dibujos/PanelesNoMovibles/DibujoInicio.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -184,7 +185,15 @@
       <option name="project" value="LOCAL" />
       <updated>1718771398687</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Arreglo de los ZOOMSSSS, &#10;ahora el panel que contiene a las figuras también crece/disminuye con los zooms">
+      <option name="closed" value="true" />
+      <created>1718845311919</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1718845311919</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -216,7 +225,8 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Intercambio de figuras parcial" />
     <MESSAGE value="Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)" />
-    <option name="LAST_COMMIT_MESSAGE" value="Arreglo de los ZOOMSSSS (Aplicado de momento solo a Inicio y Fin uwu)" />
+    <MESSAGE value="Arreglo de los ZOOMSSSS, &#10;ahora el panel que contiene a las figuras también crece/disminuye con los zooms" />
+    <option name="LAST_COMMIT_MESSAGE" value="Arreglo de los ZOOMSSSS, &#10;ahora el panel que contiene a las figuras también crece/disminuye con los zooms" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
